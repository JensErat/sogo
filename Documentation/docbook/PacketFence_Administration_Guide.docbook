<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>

<book lang="en">
<bookinfo>
    <title>PacketFence Administration Guide</title>
<!-- TODO have the build system take care of this  -->
<releaseinfo>Version 4.2.0 - May 2014</releaseinfo>
<subtitle>for version 4.2.0</subtitle>
<date>2014-05-06</date>

<legalnotice>
  <para>Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.2 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. A copy of the license is included in the section entitled "GNU Free Documentation License".</para>

  <!-- font licenses -->
  <para>The fonts used in this guide are licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: <ulink url="http://scripts.sil.org/OFL">http://scripts.sil.org/OFL</ulink></para>
  <para>Copyright © Barry Schwartz, <ulink url="http://www.crudfactory.com">http://www.crudfactory.com</ulink>, with Reserved Font Name: "Sorts Mill Goudy".</para>
  <para>Copyright © Raph Levien, <ulink url="http://levien.com/">http://levien.com/</ulink>, with Reserved Font Name: "Inconsolata".</para>
</legalnotice>
<mediaobject>
  <objectinfo>
    <corpname>Inverse inc.</corpname>
  </objectinfo>
  <textobject>
    <phrase>PacketFence's spike logo</phrase>
  </textobject>
  <imageobject>
    <imagedata align="left" width="4in" format="PNG" fileref="docs/images/pf-logo.png" />
  </imageobject>
</mediaobject>
<copyright>
  <year>2008-2014</year>
  <holder>Inverse inc.</holder>
</copyright>

<revhistory>
  <revision>
    <revnumber>3.2</revnumber>
    <date>2013-08-09</date>
    <revremark>Adding documentation for passthroughs</revremark>
  </revision>
  <revision>
    <revnumber>3.1</revnumber>
    <date>2013-07-12</date>
    <revremark>Removed references to bind (replaced by pfdns).</revremark>
  </revision>
  <revision>
    <revnumber>3.0</revnumber>
    <date>2013-05-17</date>
    <revremark>
    - New support for Debian
    </revremark>
  </revision>
  <revision>
    <revnumber>2.9</revnumber>
    <date>2013-04-03</date>
    <revremark>
    - Major rework for the v4 release
    </revremark>
  </revision>
  <revision>
    <revnumber>2.8</revnumber>
    <date>2013-01-09</date>
    <revremark>
    - Adding documentation for gaming devices registration
    - Version bump for the epel repository version
    </revremark>
  </revision>
  <revision>
    <revnumber>2.7</revnumber>
    <date>2012-10-01</date>
    <revremark>
    Adding documentation for OAuth2 Providers
    </revremark>
  </revision>
  <revision>
    <revnumber>2.6</revnumber>
    <date>2012-09-05</date>
    <revremark>
      Managed FreeRADIUS updates. Proper ownership of the
      /var/lib/samba/winbind_privileged folder since 3.5 release. Added EPEL
      on the installation line for RHEL-based systems.
    </revremark>
  </revision>
  <revision>
    <revnumber>2.5</revnumber>
    <date>2012-07-30</date>
    <revremark>Doc update for RADIUS</revremark>
  </revision>
  <revision>
    <revnumber>2.4</revnumber>
    <date>2012-07-26</date>
    <revremark>Added documentation for new captive portal profiles feature.</revremark>
  </revision>
  <revision>
    <revnumber>2.3</revnumber>
    <date>2012-07-19</date>
    <revremark>Adding suricata documentation</revremark>
  </revision>
  <revision>
    <revnumber>2.2</revnumber>
    <date>2012-06-13</date>
    <revremark>Added installation procedure for Debian. A minor fix to RHEL6 install instructions.</revremark>
  </revision>
  <revision>
    <revnumber>2.1</revnumber>
    <date>2012-04-12</date>
    <revremark>Added new documentation about pre-registered, sponsored guests and role-based enforcement. Covered updated inline enforcement instructions. Updated drbd and samba installation instructions. SoH, ntlm_auth test and some typos fixed too.</revremark>
  </revision>
  <revision>
    <revnumber>2.0</revnumber>
    <date>2012-02-22</date>
    <revremark>Documentation ported to asciidoc. Added section for accounting violations based on bandwidth, OpenVAS-based client side policy compliance and billing integration. Updated FreeRADIUS 2 config and log locations. More documentation about running a scan from a remote server. Improvements to the trap limit feature description. Updated guest registration configuration section (new parameter introduced). Added basic VoIP documentation and warning regarding CLI access due to #1370.</revremark>
  </revision>
  <revision>
    <revnumber>1.0</revnumber>
    <date>2008-12-13</date>
    <revremark>First OpenDocument version.</revremark>
  </revision>
</revhistory>

<authorgroup>
  <author>
    <firstname>Inverse</firstname>
    <surname>Inc.</surname>
    <affiliation>
      <address>
        <email>info@inverse.ca</email>
      </address>
    </affiliation>
  </author>
</authorgroup>
</bookinfo>
<chapter id="_about_this_guide">
<title>About this Guide</title>
<simpara>This guide will walk you through the installation and the day to day administration of the PacketFence solution.</simpara>
<simpara>The latest version of this guide is available at <ulink url="http://www.packetfence.org/documentation/">http://www.packetfence.org/documentation/</ulink></simpara>
<section id="_other_sources_of_information">
<title>Other sources of information</title>
<variablelist>
<varlistentry>
<term>
Network Devices Configuration Guide
</term>
<listitem>
<simpara>
  Covers switch, controllers and access points configuration.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Developers Guide
</term>
<listitem>
<simpara>
  Covers captive portal customization, VLAN management customization and
  instructions for supporting new hardware.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>CREDITS</literal>
</term>
<listitem>
<simpara>
  This is, at least, a partial file of PacketFence contributors.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>NEWS.asciidoc</literal>
</term>
<listitem>
<simpara>
  Covers noteworthy features, improvements and bugfixes by release.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>UPGRADE.asciidoc</literal>
</term>
<listitem>
<simpara>
  Covers compatibility related changes, manual instructions and general notes
  about upgrading.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>ChangeLog</literal>
</term>
<listitem>
<simpara>
  Covers all changes to the source code.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>These files are included in the package and release tarballs.</simpara>
</section>
</chapter>
<chapter id="_introduction">
<title>Introduction</title>
<simpara>PacketFence is a fully supported, trusted, Free and Open Source network access control (NAC) system. Boosting an impressive feature set including a captive portal for registration and remediation, centralized wired and wireless management, 802.1X support, layer-2 isolation of problematic devices, integration with the Snort/Suricata IDS and the Nessus vulnerability scanner; PacketFence can be used to effectively secure networks - from small to very large heterogeneous networks.</simpara>
<section id="_features">
<title>Features</title>
<variablelist>
<varlistentry>
<term>
Out of band (VLAN Enforcement)
</term>
<listitem>
<simpara>
  PacketFence&#8217;s operation is completely out of band when using VLAN enforcement which allows the solution to scale geographically and to be more resilient to failures.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
In Band (Inline Enforcement)
</term>
<listitem>
<simpara>
  PacketFence can also be configured to be in-band, especially when you have non-manageable network switches or access points. PacketFence can also work with both VLAN and Inline enforcement activated for maximum scalability and security while allowing older hardware to still be secured using Inline enforcement.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Hybrid support (Inline Enforcement with RADIUS support)
</term>
<listitem>
<simpara>
  PacketFence can also be configured as hybrid, if you have a manageable device that supports 802.1X and/or MAC-authentication. This feature can be enabled using a RADIUS attribute (MAC address, SSID, port) or using full inline mode on the equipment.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Hotspot support (Web Auth Enforcement)
</term>
<listitem>
<simpara>
  PacketFence can also be configured as hotspot, if you have a manageable device that support an external captive portal (like
Cisco WLC or Aruba IAP).
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Voice over IP (VoIP) support
</term>
<listitem>
<simpara>
  Also called IP Telephony (IPT), VoIP is fully supported (even in heterogeneous environments) for multiple switch vendors (Cisco, Edge-Core, HP, LinkSys, Nortel Networks and many more).
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
802.1X
</term>
<listitem>
<simpara>
  802.1X wireless and wired is supported through a <ulink url="http://www.freeradius.org">FreeRADIUS</ulink> module.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Wireless integration
</term>
<listitem>
<simpara>
  PacketFence integrates perfectly with wireless networks through a <ulink url="http://www.freeradius.org/">FreeRADIUS</ulink> module. This allows you to secure your wired and wireless networks the same way using the same user database and using the same captive portal, providing a consistent user experience. Mixing Access Points (AP) vendors and Wireless Controllers is supported.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Registration
</term>
<listitem>
<simpara>
  PacketFence supports an optional registration mechanism similar to "captive portal" solutions. Contrary to most captive portal solutions, PacketFence remembers users who previously registered and will automatically give them access without another authentication. Of course, this is configurable. An Acceptable Use Policy can be specified such that users cannot enable network access without first accepting it.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Detection of abnormal network activities
</term>
<listitem>
<simpara>
  Abnormal network activities (computer virus, worms, spyware, traffic denied by establishment policy, etc.) can be detected using local and remote <ulink url="http://www.snort.org/">Snort</ulink> or Suricata sensors. Beyond simple detection, PacketFence layers its own alerting and suppression mechanism on each alert type. A set of configurable actions for each violation is available to administrators.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Proactive vulnerability scans
</term>
<listitem>
<simpara>
  Either <ulink url="http://www.nessus.org/nessus/">Nessus</ulink> or <ulink url="http://www.openvas.org">OpenVAS</ulink> vulnerability scans can be performed upon registration, scheduled or on an ad-hoc basis. PacketFence correlates the scan engine vulnerability ID&#8217;s of each scan to the violation configuration, returning content specific web pages about which vulnerability the host may have.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Isolation of problematic devices
</term>
<listitem>
<simpara>
  PacketFence supports several isolation techniques, including VLAN isolation with VoIP support (even in heterogeneous environments) for multiple switch vendors.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Remediation through a captive portal
</term>
<listitem>
<simpara>
  Once trapped, all network traffic is terminated by the PacketFence system. Based on the node&#8217;s current status (unregistered, open violation, etc), the user is redirected to the appropriate URL. In the case of a violation, the user will be presented with instructions for the particular situation he/she is in reducing costly help desk intervention.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Command-line and Web-based management
</term>
<listitem>
<simpara>
  Web-based and command-line interfaces for all management tasks.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Guest Access
</term>
<listitem>
<simpara>
  PacketFence supports a special guest VLAN out of the box. You configure your network so that the guest VLAN only goes out to the Internet and the registration VLAN and the captive portal are the components used to explain to the guest how to register for access and how his access works. This is usually branded by the organization offering the access. Several means of registering guests are possible. PacketFence does also support guest access bulk creations and imports.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Gaming devices registration
</term>
<listitem>
<simpara>
  A registered user can access a special Web page to register a gaming device of his own. This registration process will require login from the user and then will register gaming devices with pre-approved MAC OUI into a configurable category.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>PacketFence is developed by a community of developers located mainly in North America. More information can be found at <ulink url="http://www.packetfence.org">http://www.packetfence.org</ulink>.</simpara>
</section>
<section id="_network_integration">
<title>Network Integration</title>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="docs/images/diagram-network.png" width="100%" scalefit="1"/>
  </imageobject>
  <textobject><phrase>Network integration diagram</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>VLAN enforcement is pictured in the above diagram. Inline enforcement should be seen as a simple flat network where PacketFence acts as a firewall / gateway.</simpara>
</section>
<section id="_components">
<title>Components</title>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="docs/images/diagram-components.png" width="100%" scalefit="1"/>
  </imageobject>
  <textobject><phrase>System components overview</phrase></textobject>
</mediaobject>
</informalfigure>
</section>
</chapter>
<chapter id="_system_requirements">
<title>System Requirements</title>
<section id="_assumptions">
<title>Assumptions</title>
<simpara>PacketFence reuses many components in an infrastructure. Thus, it requires the following ones:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
Database server (MySQL)
</simpara>
</listitem>
<listitem>
<simpara>
Web server (Apache)
</simpara>
</listitem>
</itemizedlist>
<simpara>Depending on your setup you may have to install additional components like:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
DHCP server (ISC DHCP)
</simpara>
</listitem>
<listitem>
<simpara>
RADIUS server (FreeRADIUS)
</simpara>
</listitem>
<listitem>
<simpara>
NIDS (Snort/Suricata)
</simpara>
</listitem>
</itemizedlist>
<simpara>In this guide, we assume that all those components are running on the same server (i.e., "localhost" or "127.0.0.1") that PacketFence will be installed on.</simpara>
<simpara>Good understanding of those underlying component and GNU/Linux is required to install PacketFence. If you miss some of those required components, please refer to the appropriate documentation and proceed with the installation of these requirements before continuing with this guide.</simpara>
<simpara>The following table provides recommendations for the required components, together with version numbers :</simpara>
<informaltable
frame="topbot"
rowsep="1" colsep="0"
>
<tgroup cols="2">
<colspec colname="col_1" colwidth="25*"/>
<colspec colname="col_2" colwidth="75*"/>
<tbody>
<row>
<entry align="left" valign="top"><simpara>MySQL server</simpara></entry>
<entry align="left" valign="top"><simpara>MySQL 5.1</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Web server</simpara></entry>
<entry align="left" valign="top"><simpara>Apache 2.2</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>DHCP server</simpara></entry>
<entry align="left" valign="top"><simpara>DHCP 4.1</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>RADIUS server</simpara></entry>
<entry align="left" valign="top"><simpara>FreeRADIUS 2.2.0</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Snort</simpara></entry>
<entry align="left" valign="top"><simpara>Snort 2.9.1</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>Suricata</simpara></entry>
<entry align="left" valign="top"><simpara>Suricata 1.4.1</simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara>More recent versions of the software mentioned above can also be used.</simpara>
</section>
<section id="_minimum_hardware_requirements">
<title>Minimum Hardware Requirements</title>
<simpara>The following provides a list of server hardware recommendations:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
Intel or AMD CPU 3 GHz
</simpara>
</listitem>
<listitem>
<simpara>
4 GB of RAM
</simpara>
</listitem>
<listitem>
<simpara>
100 GB of disk space (RAID-1 recommended)
</simpara>
</listitem>
<listitem>
<simpara>
1 Network card
</simpara>
<itemizedlist>
<listitem>
<simpara>
+1 for high-availability
</simpara>
</listitem>
<listitem>
<simpara>
+1 for intrusion detection
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section id="_operating_system_requirements">
<title>Operating System Requirements</title>
<simpara>PacketFence supports the following operating systems on the i386 or x86_64 architectures:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
Red Hat Enterprise Linux 6.x Server
</simpara>
</listitem>
<listitem>
<simpara>
Community ENTerprise Operating System (CentOS) 6.x
</simpara>
</listitem>
<listitem>
<simpara>
Debian 7.0 (Wheezy)
</simpara>
</listitem>
<listitem>
<simpara>
Ubuntu 12.04 LTS
</simpara>
</listitem>
</itemizedlist>
<simpara>Make sure that you can install additional packages from your standard distribution. For example, if you are using Red Hat Enterprise Linux, you have to be subscribed to the Red Hat Network before continuing with the PacketFence software installation.</simpara>
<simpara>Other distributions such as Fedora and Gentoo are known to work but this document doesn&#8217;t cover them.</simpara>
<section id="_services_start_up">
<title>Services start-up</title>
<simpara>PacketFence takes care of handling the operation of the following services:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
Web server (httpd)
</simpara>
</listitem>
<listitem>
<simpara>
DHCP server (dhcpd)
</simpara>
</listitem>
<listitem>
<simpara>
FreeRADIUS server (radiusd)
</simpara>
</listitem>
<listitem>
<simpara>
Snort/Suricata Network IDS (snort/suricata)
</simpara>
</listitem>
<listitem>
<simpara>
Firewall (iptables)
</simpara>
</listitem>
</itemizedlist>
<simpara><emphasis role="strong">Make sure that all the other services are automatically started by your operating system!</emphasis></simpara>
</section>
</section>
</chapter>
<chapter id="_installation">
<title>Installation</title>
<simpara>This section will guide you through the installation of PacketFence together with its dependencies.</simpara>
<section id="_os_installation">
<title>OS Installation</title>
<simpara>Install your distribution with minimal installation and no additional packages. Then:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
Disable Firewall
</simpara>
</listitem>
<listitem>
<simpara>
Disable SELinux
</simpara>
</listitem>
<listitem>
<simpara>
Disable AppArmor
</simpara>
</listitem>
<listitem>
<simpara>
Disable resolvconf
</simpara>
</listitem>
</itemizedlist>
<simpara>Make sure your system is up to date and your yum or apt-get database is updated. On a RHEL-based system, do:</simpara>
<literallayout class="monospaced">yum update</literallayout>
<simpara>On a Debian or Ubuntu system, do:</simpara>
<literallayout class="monospaced">apt-get update
apt-get upgrade</literallayout>
<section id="_redhat_based_systems">
<title>RedHat-based systems</title>
<note><simpara>Includes CentOS and Scientific Linux. Both i386 and x86_64 architectures supported.</simpara></note>
</section>
<section id="_rhel_6_x">
<title>RHEL 6.x</title>
<note><simpara>These are extra steps are required for RHEL 6 systems only. Derivatives such as CentOS or Scientific Linux don&#8217;t need to take the extra steps.</simpara></note>
<simpara>RedHat Enterprise Linux users need to take an additional setup step. If you are not using the RHN Subscription Management from RedHat you need to enable the optional channel by running the following as root:</simpara>
<literallayout class="monospaced">rhn-channel --add --channel=rhel-`uname -m`-server-optional-6</literallayout>
</section>
<section id="_debian_and_ubuntu">
<title>Debian and Ubuntu</title>
<simpara>All the PacketFence dependencies are available through the official repositories.</simpara>
</section>
</section>
<section id="_software_download">
<title>Software Download</title>
<simpara>PacketFence provides a RPM repository for RHEL / CentOS instead of a single RPM file.</simpara>
<simpara>For Debian and Ubuntu, PacketFence also provides package repositories.</simpara>
<simpara>These repositories contain all required dependencies to install PacketFence. This provides numerous advantages:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
easy installation
</simpara>
</listitem>
<listitem>
<simpara>
everything is packaged as RPM/deb (no more CPAN hassle)
</simpara>
</listitem>
<listitem>
<simpara>
easy upgrade
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_software_installation">
<title>Software Installation</title>
<section id="_rhel_centos">
<title>RHEL / CentOS</title>
<simpara>In order to use the PacketFence repository :</simpara>
<literallayout class="monospaced"># rpm -Uvh http://packetfence.org/downloads/PacketFence/RHEL6/`uname -i`/RPMS/packetfence-release-1-1.el6.noarch.rpm</literallayout>
<simpara>Once the repository is defined, you can install PacketFence with all its
dependencies, and the required external services (Database
server, DHCP server, RADIUS server) using:</simpara>
<literallayout class="monospaced">yum groupinstall --enablerepo=packetfence Packetfence-complete</literallayout>
<simpara>Or, if you prefer, to install only the core PacketFence without all the external services, you can use:</simpara>
<literallayout class="monospaced">yum install --enablerepo=packetfence packetfence</literallayout>
</section>
<section id="_debian_and_ubuntu_2">
<title>Debian and Ubuntu</title>
<simpara>In order to use the repository, create a file named <literal>/etc/apt/sources.list.d/packetfence.list</literal> with the following content when using Debian 7.0 (Wheezy):</simpara>
<literallayout class="monospaced">deb http://inverse.ca/downloads/PacketFence/debian wheezy wheezy</literallayout>
<simpara>Or when using Ubuntu 12.04 LTS:</simpara>
<literallayout class="monospaced">deb http://inverse.ca/downloads/PacketFence/ubuntu precise precise</literallayout>
<simpara>Once the repository is defined, you can install PacketFence with all its
dependencies, and the required external services (Database
server, DHCP server, RADIUS server) using:</simpara>
<literallayout class="monospaced">sudo apt-key adv --keyserver keys.gnupg.net --recv-key 0x810273C4
sudo apt-get update
sudo apt-get install packetfence</literallayout>
<simpara>In order to use ipset in inline mode, you must install two news dependencies and compile kernel modules:</simpara>
<literallayout class="monospaced">sudo apt-get install xtables-addons-source xtables-addons-common
sudo module-assistant auto-install xtables-addons</literallayout>
</section>
</section>
</chapter>
<chapter id="_configuration">
<title>Configuration</title>
<simpara>In this section, you&#8217;ll learn how to configure PacketFence. PacketFence will use MySQL, Apache, ISC DHCP, iptables and FreeRADIUS. As previously mentioned, we assume that those components run on the same server on which PacketFence is being installed.</simpara>
<section id="_first_step">
<title>First Step</title>
<simpara>The first step after installing the necessary packages is the configuration step. PacketFence provides an helpful and detailed web-based configurator.</simpara>
<simpara>Like mentioned at the end of the packages installation, fire up a web browser and go to <ulink url="https://@ip_of_packetfence:1443/configurator">https://@ip_of_packetfence:1443/configurator</ulink>. From there, the configuration process is splited in six (6) distinctive steps, after which you&#8217;ll have a working PacketFence setup.</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
Step 1: Enforcement technique. You&#8217;ll choose either VLAN enforcement, inline enforcement or both;
</simpara>
</listitem>
<listitem>
<simpara>
Step 2: Network configuration. You&#8217;ll be able to configure the network interfaces of the system as well as assigning the correct interfaces for each of the required types of the chosen enforcement technique(s);
</simpara>
</listitem>
<listitem>
<simpara>
Step 3: Database configuration. This step will create the PacketFence database and populate it with the correct structure. A MySQL user will also be created and assigned to the newly created database;
</simpara>
</listitem>
<listitem>
<simpara>
Step 4: General configuration. You will need to configure some of the basic PacketFence configuration parameters;
</simpara>
</listitem>
<listitem>
<simpara>
Step 5: Administrative user. This step will ask you to create an administrative user that will be able to access the web-based adminsitration interface once the services are functionals;
</simpara>
</listitem>
<listitem>
<simpara>
Step 6: Let&#8217;s do this! See the status of your configuration and start your new NAC!
</simpara>
</listitem>
</itemizedlist>
<note><simpara>Keep in mind that the resulting PacketFence configuration will be located under <literal>/usr/local/pf/conf/</literal> and the configuration files can always be adjusted by hand afterward or from PacketFence&#8217;s Web GUI.</simpara></note>
</section>
<section id="_web_based_administration_interface">
<title>Web-based Administration Interface</title>
<simpara>PacketFence provides a web-based administration interface for easy configuration and operational management. If you went through PacketFence&#8217;s web-based configuration tool, you should have set the password for the <literal>admin</literal> user. If not, the default password is also <literal>admin</literal>.</simpara>
<simpara>Once PacketFence is started, the administration interface is available at: <ulink url="https://@ip_of_packetfence&gt;:1443/">https://@ip_of_packetfence&gt;:1443/</ulink></simpara>
</section>
<section id="_global_configuration_file_pf_conf">
<title>Global configuration file (pf.conf)</title>
<simpara>The <literal>/usr/local/pf/conf/pf.conf</literal> file contains the PacketFence general configuration. For example, this is the place where we inform PacketFence it will work in VLAN isolation mode.</simpara>
<simpara>All the default parameters and their descriptions are stored in <literal>/usr/local/pf/conf/pf.conf.defaults</literal>.</simpara>
<simpara>In order to override a default parameter, define it and set it in <literal>pf.conf</literal>.</simpara>
<simpara><literal>/usr/local/pf/conf/documentation.conf</literal> holds the complete list of all available parameters.</simpara>
<simpara>All these parameters are also accessible through the web-based administration interface under the Configuration tab. It is highly recommended that you use the web-based administration interface of PacketFence for any configuration changes.</simpara>
</section>
<section id="_apache_configuration">
<title>Apache Configuration</title>
<simpara>The PacketFence´s Apache configuration are located in <literal>/usr/local/pf/conf/httpd.conf.d/</literal>.</simpara>
<simpara>In this directory you have three important files: <literal>httpd.admin</literal>, <literal>httpd.portal</literal>, <literal>httpd.webservice</literal>.</simpara>
<itemizedlist>
<listitem>
<simpara>
<literal>httpd.admin</literal> is used to manage PacketFence admin interface
</simpara>
</listitem>
<listitem>
<simpara>
<literal>httpd.portal</literal> is used to manage PacketFence captive portal interface
</simpara>
</listitem>
<listitem>
<simpara>
<literal>httpd.webservices</literal> is used to manage PacketFence webservices interface
</simpara>
</listitem>
</itemizedlist>
<simpara>These files have been written using the Perl language and are completely dynamic - so they activate services only on the network interfaces provided for this purpose.</simpara>
<simpara>The other files in this directory are managed by PacketFence using templates, so it is easy to modify these files based on your configuration. SSL is enabled by default to secure access.</simpara>
<simpara>Upon PacketFence installation, self-signed certificates will be created in <literal>/usr/local/pf/conf/ssl</literal> (<literal>server.key</literal> and <literal>server.crt</literal>). Those certificates can be replaced anytime by your 3rd-party or existing wildcard certificate without problems. Please note that the CN (Common Name) needs to be the same as the one defined in the PacketFence configuration file (<literal>pf.conf</literal>).</simpara>
<section id="_captive_portal">
<title>Captive Portal</title>
<simpara>Important parameters to configure regarding the captive portal are the following:</simpara>
<itemizedlist>
<listitem>
<simpara>
Redirect URL under <emphasis role="strong">Configuration &#8594; Trappings</emphasis>
</simpara>
</listitem>
</itemizedlist>
<simpara>For some browsers, is it preferable to redirect the user to a specific URL instead of the URL the user originally intended to visit. For these browsers, the URL defined in <literal>redirecturl</literal> will be the one where the user will be redirected. Affected browsers are Firefox 3 and later.</simpara>
<itemizedlist>
<listitem>
<simpara>
IP under <emphasis role="strong">Configuration &#8594; Captive portal</emphasis>
</simpara>
</listitem>
</itemizedlist>
<simpara>This IP is used as the web server who hosts the <literal>common/network-access-detection.gif</literal> which is used to detect if network access was enabled. It cannot be a domain name since it is used in registration or quarantine where DNS is black-holed. It is recommended that you allow your users to reach your PacketFence server and put your LAN&#8217;s PacketFence IP. By default we will make this reach PacketFence&#8217;s website as an easier and more accessible solution.</simpara>
</section>
</section>
<section id="_selinux">
<title>SELinux</title>
<simpara>Even if this feature may be wanted by some organizations, PacketFence will not run properly if SELinux is set to enforced. You will need to explicitly disable it in the <literal>/etc/selinux/config</literal> file.</simpara>
</section>
<section id="_roles_management">
<title>Roles Management</title>
<simpara>Roles in PacketFence can be created from PacketFence administrative GUI - from the <emphasis role="strong">Configuration &#8594; Users &#8594; Roles</emphasis> section. From this interface, you can also limit the number of devices users belonging to certain roles can register.</simpara>
<simpara>Roles are dynamically computed by PacketFence, based on the rules (ie., a set of conditions and actions) from authentication sources, using a first-match wins algorithm. Roles are then matched to VLAN or internal roles on equipment from the <emphasis role="strong">Configuration &#8594; Network &#8594; Switches</emphasis> module.</simpara>
</section>
<section id="_authentication">
<title>Authentication</title>
<simpara>PacketFence can authenticate users that register devices via the captive portal using various methods. Among the supported methods, there are:</simpara>
<itemizedlist>
<listitem>
<simpara>
Active Directory
</simpara>
</listitem>
<listitem>
<simpara>
Apache htpasswd file
</simpara>
</listitem>
<listitem>
<simpara>
Email
</simpara>
</listitem>
<listitem>
<simpara>
Facebook (OAuth 2)
</simpara>
</listitem>
<listitem>
<simpara>
Github (OAuth 2)
</simpara>
</listitem>
<listitem>
<simpara>
Google (OAuth 2)
</simpara>
</listitem>
<listitem>
<simpara>
Kerberos
</simpara>
</listitem>
<listitem>
<simpara>
LDAP
</simpara>
</listitem>
<listitem>
<simpara>
Null
</simpara>
</listitem>
<listitem>
<simpara>
RADIUS
</simpara>
</listitem>
<listitem>
<simpara>
SMS
</simpara>
</listitem>
<listitem>
<simpara>
Sponsored Email
</simpara>
</listitem>
</itemizedlist>
<simpara>Moreover, PacketFence can also authenticate users defined in its own internal SQL database. Authentication sources can be created from PacketFence administrative GUI - from the <emphasis role="strong">Configuration &#8594; Users &#8594; Sources</emphasis> section. Alternatively (but not recommended), authentication sources, rules, conditions and actions can be configured from <literal>conf/authentication.conf</literal>.</simpara>
<simpara>Each authentication sources you define will have a set of rules, conditions and actions.</simpara>
<simpara>Multiple authentication sources can be defined, and will be tested in the order specified (note that they can be reordered from the GUI by dragging it around). Each source can have multiple rules, which will also be tested in the order specified. Rules can also be reordered, just like sources. Finally, conditions can be defined for a rule to match certain criterias. If the criterias match (one ore more), action are then applied and rules testing stop, across all sources as this is a "first match wins" operation.</simpara>
<simpara>When no condition is defined, the rule will be considered as a fallback. When a fallback is defined, all actions will be applied fory any users that match in the authentication source.</simpara>
<simpara>Once a source is defined, it can be used from <emphasis role="strong">Configuration &#8594; Main &#8594; Portal Profiles and Pages</emphasis>. Each portal profile has a list of authentication sources to use.</simpara>
<section id="_example">
<title>Example</title>
<simpara>Let&#8217;s say we have two roles: guest and employee. First, we define them <emphasis role="strong">Configuration &#8594; Users &#8594; Roles</emphasis>.</simpara>
<simpara>Now, we want to authenticate employees using Active Directory (over LDAP), and guests using PacketFence&#8217;s internal database - both using PacketFence&#8217;s captive portal. From the <emphasis role="strong">Configuration &#8594; Users &#8594; Sources</emphasis>, we select <emphasis role="strong">Add source &#8594; AD</emphasis>. We provide the following information:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
Name: ad1
</simpara>
</listitem>
<listitem>
<simpara>
Description: Active Directory for Employees
</simpara>
</listitem>
<listitem>
<simpara>
Host: 192.168.1.2:389 without SSL/TLS
</simpara>
</listitem>
<listitem>
<simpara>
Base DN: CN=Users,DC=acme,DC=local
</simpara>
</listitem>
<listitem>
<simpara>
Scope: One-level
</simpara>
</listitem>
<listitem>
<simpara>
Username Attribute: sAMAccountName
</simpara>
</listitem>
<listitem>
<simpara>
Bind DN: CN=Administrator,CN=Users,DC=acme,DC=local
</simpara>
</listitem>
<listitem>
<simpara>
Password: acme123
</simpara>
</listitem>
</itemizedlist>
<simpara>Then, we add a rule by clicking on the <emphasis role="strong">Add rule</emphasis> button and provide the following information:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
Name: employees
</simpara>
</listitem>
<listitem>
<simpara>
Description: Rule for all employees
</simpara>
</listitem>
<listitem>
<simpara>
Don&#8217;t set any condition (as it&#8217;s a catch-all rule)
</simpara>
</listitem>
<listitem>
<simpara>
Set the following actions:
</simpara>
<itemizedlist>
<listitem>
<simpara>
Set role employee
</simpara>
</listitem>
<listitem>
<simpara>
Set unregistration date January 1st, 2020
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara>Test the connection and save everything. Using the newly defined source, any username that actually matches in the source (using the sAMAccountName) will have the employee role and an unregistration date set to January 1st, 2020.</simpara>
<simpara>Now, since we want to authenticate guests from PacketFence&#8217;s internal SQL database, accounts must be provisionned manually. You can do so from the <emphasis role="strong">Configuration &#8594; Users &#8594; Create</emphasis> section. When creating guests, specify "guest" for the <emphasis role="strong">Set role</emphasis> action, and set an access duration for 1 day.</simpara>
<simpara>If you would like to differentiate user authentication and machine authentication using Active Directory, one way to do it is by creating a second authentication sources, for machines:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
Name: ad1
</simpara>
</listitem>
<listitem>
<simpara>
Description: Active Directory for Machines
</simpara>
</listitem>
<listitem>
<simpara>
Host: 192.168.1.2:389 without SSL/TLS
</simpara>
</listitem>
<listitem>
<simpara>
Base DN: CN=Computers,DC=acme,DC=local
</simpara>
</listitem>
<listitem>
<simpara>
Scope: One-level
</simpara>
</listitem>
<listitem>
<simpara>
Username Attribute: servicePrincipalName
</simpara>
</listitem>
<listitem>
<simpara>
Bind DN: CN=Administrator,CN=Users,DC=acme,DC=local
</simpara>
</listitem>
<listitem>
<simpara>
Password: acme123
</simpara>
</listitem>
</itemizedlist>
<simpara>Then, we add a rule:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
Name: machines
</simpara>
</listitem>
<listitem>
<simpara>
Description: Rule for all machines
</simpara>
</listitem>
<listitem>
<simpara>
Don&#8217;t set any condition (as it&#8217;s a catch-all rule)
</simpara>
</listitem>
<listitem>
<simpara>
Set the following actions:
</simpara>
<itemizedlist>
<listitem>
<simpara>
Set role machineauth
</simpara>
</listitem>
<listitem>
<simpara>
Set unregistration date January 1st, 2020
</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara>Note that when a rule is defined as a catch-all, it will always match if the username attribute matches the queried one. This applies for Active Directory, LDAP and Apache htpasswd file sources. Kerberos and RADIUS will act as true catch-all, and accept everything.</simpara>
</section>
</section>
<section id="_network_devices_definition_switches_conf">
<title>Network Devices Definition (switches.conf)</title>
<simpara>This section applies only for VLAN enforcement. Users planning to do inline enforcement only can skip this section.</simpara>
<simpara>PacketFence needs to know which switches, access points or controllers it manages, their type and configuration. All this information is stored in <literal>/usr/local/pf/conf/switches.conf</literal>. You can modify the configuration directly in the <literal>switches.conf</literal> file or you can do it in the Web Administration panel under <emphasis role="strong">Configuration &#8594; Network &#8594; Switches</emphasis>.</simpara>
<simpara>This files contains a default section including:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
List of VLANs managed by PacketFence
</simpara>
</listitem>
<listitem>
<simpara>
Default SNMP read/write communities for the switches
</simpara>
</listitem>
<listitem>
<simpara>
Default working mode (see note about working mode below)
</simpara>
</listitem>
</itemizedlist>
<simpara>and a switch section for each switch (managed by PacketFence) including:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
Switch IP
</simpara>
</listitem>
<listitem>
<simpara>
Switch vendor/type
</simpara>
</listitem>
<listitem>
<simpara>
Switch uplink ports (trunks and non-managed ports)
</simpara>
</listitem>
<listitem>
<simpara>
per-switch re-definition of the VLANs (if required)
</simpara>
</listitem>
</itemizedlist>
<note><simpara><literal>switches.conf</literal> is loaded at startup. A restart is required when changes
are made to this file.</simpara></note>
<section id="_working_modes">
<title>Working modes</title>
<simpara>There are three different working modes:</simpara>
<variablelist>
<varlistentry>
<term>
Testing
</term>
<listitem>
<simpara>
pfsetvlan writes in the log files what it would normally do, but it doesn&#8217;t do anything.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Registration
</term>
<listitem>
<simpara>
pfsetvlan automatically-register all MAC addresses seen on the switch ports. As in testing mode, no VLAN changes are done.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
Production
</term>
<listitem>
<simpara>
pfsetvlan sends the SNMP writes to change the VLAN on the switch ports.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
<section id="_snmp_v1_v2c_and_v3">
<title>SNMP v1, v2c and v3</title>
<simpara>PacketFence uses SNMP to communicate with most switches. Starting with 1.8, PacketFence now supports SNMP v3. You can use SNMP v3 for communication in both directions: from the switch to PacketFence and from PacketFence to the switch.</simpara>
<section id="_from_packetfence_to_a_switch">
<title>From PacketFence to a switch</title>
<simpara>Edit the switch config file (<literal>/usr/local/pf/conf/switches.conf</literal>) and set the following parameters:</simpara>
<literallayout class="monospaced">SNMPVersion = 3
SNMPUserNameRead = readUser
SNMPAuthProtocolRead = MD5
SNMPAuthPasswordRead = authpwdread
SNMPPrivProtocolRead = AES
SNMPPrivPasswordRead = privpwdread
SNMPUserNameWrite = writeUser
SNMPAuthProtocolWrite = MD5
SNMPAuthPasswordWrite = authpwdwrite
SNMPPrivProtocolWrite = AES
SNMPPrivPasswordWrite = privpwdwrite</literallayout>
</section>
<section id="_from_a_switch_to_packetfence">
<title>From a switch to PacketFence</title>
<simpara>Edit the switch config file (<literal>/usr/local/pf/conf/switches.conf</literal>) and set the following parameters:</simpara>
<literallayout class="monospaced">SNMPVersionTrap = 3
SNMPUserNameTrap = readUser
SNMPAuthProtocolTrap = MD5
SNMPAuthPasswordTrap = authpwdread
SNMPPrivProtocolTrap = AES
SNMPPrivPasswordTrap = privpwdread</literallayout>
</section>
<section id="_switch_configuration">
<title>Switch Configuration</title>
<simpara>Here is a switch configuration example in order to enable SNMP v3 in both directions on a Cisco Switch.</simpara>
<literallayout class="monospaced">snmp-server engineID local AA5ED139B81D4A328D18ACD1
snmp-server group readGroup v3 priv
snmp-server group writeGroup v3 priv read v1default write v1default
snmp-server user readUser readGroup v3 auth md5 authpwdread priv aes 128 privpwdread
snmp-server user writeUser writeGroup v3 auth md5 authpwdwrite priv aes 128 privpwdwrite
snmp-server enable traps port-security
snmp-server enable traps port-security trap-rate 1
snmp-server host 192.168.0.50 version 3 priv readUser  port-security</literallayout>
</section>
</section>
<section id="_command_line_interface_telnet_and_ssh">
<title>Command-Line Interface: Telnet and SSH</title>
<warning><simpara>Privilege detection is disabled in the current PacketFence version due to some issues (see <ulink url="http://www.packetfence.org/bugs/view.php?id=1370">#1370</ulink>). So make sure that the <literal>cliUser</literal> and <literal>cliPwd</literal> you provide always get you into a privileged mode (except for Trapeze hardware).</simpara></warning>
<simpara>PackeFence needs sometimes to establish an interactive command-line session with a switch. This can be done using Telnet. Starting with 1.8, you can now use SSH. In order to do so, edit the switch config file (<literal>/usr/local/pf/conf/switches.conf</literal>) and set the following parameters:</simpara>
<literallayout class="monospaced">cliTransport = SSH (or Telnet)
cliUser = admin
cliPwd = admin_pwd
cliEnablePwd =</literallayout>
<simpara>It can also be done through the Web Administration Interface under <emphasis role="strong">Configuration &#8594; Switches</emphasis>.</simpara>
</section>
<section id="_web_services_interface">
<title>Web Services Interface</title>
<simpara>PackeFence sometimes needs to establish a dialog with the Web Services capabilities of a switch. In order to do so, edit the switch config file (<literal>/usr/local/pf/conf/switches.conf</literal>) and set the following parameters:</simpara>
<literallayout class="monospaced">wsTransport = http (or https)
wsUser = admin
wsPwd = admin_pwd</literallayout>
<note><simpara>as of PacketFence 1.9.1 few switches require Web Services configuration in order to work. It can also be done through the Web Administration Interface under <emphasis role="strong">Configuration &#8594; Switches</emphasis>.</simpara></note>
</section>
<section id="_radius_secret">
<title>Radius Secret</title>
<simpara>For certain authentication mechanism, such as 802.1X or MAC Authentication, the RADIUS server needs to have the network device in its client list. As of PacketFence 3.0, we now use a database backend to store the RADIUS client information. In order to do so, edit the switch config file (<literal>/usr/local/pf/conf/switches.conf</literal>) and set the following parameters:</simpara>
<literallayout class="monospaced">radiusSecret= secretPassPhrase</literallayout>
<simpara>Also, starting with PacketFence 3.1, the RADIUS secret is required for our support of RADIUS Dynamic Authentication (Change of authorization or Disconnect) as defined in RFC3576.</simpara>
</section>
<section id="_role_based_enforcement_support">
<title>Role-based enforcement support</title>
<simpara>Some network devices support the assignment of a specific set of rules (firewall or ACLs) to a user. The idea is that these rules can be a lot more precise to control what a user can or cannot do compared to VLAN which have a larger network management overhead.</simpara>
<simpara>PacketFence supports assigning roles on devices that supports it. The current role assignment strategy is to assign it along with the VLAN (that may change in the future). A special internal role to external role assignment must be configured in the switch configuration file (<literal>/usr/local/pf/conf/switches.conf</literal>).</simpara>
<simpara>The current format is the following:</simpara>
<literallayout class="monospaced">Format: &lt;rolename&gt;Role=&lt;controller_role&gt;</literallayout>
<simpara>And you assign it to the global <literal>roles</literal> parameter or the per-switch one. For example:</simpara>
<literallayout class="monospaced">adminRole=full-access
engineeringRole=full-access
salesRole=little-access</literallayout>
<simpara>would return the <literal>full-access</literal> role to the nodes categorized as admin or engineering and the role <literal>little-access</literal> to nodes categorized as sales.</simpara>
<caution><simpara>Make sure that the roles are properly defined on the network devices prior to assigning roles!</simpara></caution>
</section>
</section>
<section id="_default_vlan_role_assignment">
<title>Default VLAN/role assignment</title>
<simpara>This section applies only for VLAN enforcement. Users planning to do inline enforcement only can skip this section.</simpara>
<simpara>The default VLAN assignment technique used in PacketFence is a per-switch one. The correct default VLAN for a given MAC is determined based on the computed role by PacketFence during the registration process for the device, or dynamically during an 802.1X authentication. The computed internal role will then be mapped to either a VLAN or an external role for the specific equipement the user is connected to.</simpara>
<simpara>This allows you to do easy per-building VLAN/role segmentation.</simpara>
<simpara>If you need more flexibility than what can be defined from the PacketFence&#8217;s authentication sources (rules/conditions/actions) take a look at the FAQ entry <ulink url="http://www.packetfence.org/support/faqs/article/custom-vlan-assignment-behavior.html">Custom VLAN assignment behavior</ulink> available online.</simpara>
</section>
<section id="_inline_enforcement_configuration">
<title>Inline enforcement configuration</title>
<simpara>This section applies only for Inline enforcement. Users planning to do VLAN enforcement only can skip this section.</simpara>
<simpara>The inline enforcement is a very convenient method of performing access control on older network hardware that is not capable of doing VLAN enforcement or that is not supported by PacketFence. This technique is covered in details in the <link linkend="_technical_introduction_to_inline_enforcement">"Technical introduction to Inline enforcement" section</link>.</simpara>
<simpara>An important configuration parameter to have in mind when configuring inline enforcement is that the DNS reached by these users should be your actual production DNS server - which shouldn&#8217;t be in the same broadcast domain as your inline users. The next section shows you how to configure the proper inline interface and it is in this section that you should refer to the proper production DNS.</simpara>
<simpara>Inline enforcement uses <literal>ipset</literal> to mark nodes as registered, unregistered and isolated.
It is also now possible to use multiple inline interfaces. A node registered on the first inline interface is marked with an ip:mac tuple (for L2, only ip for L3), so when the node tries to register on an other inline interface, PacketFence detects that the node is already registered on the first VLAN.
It is also possible to enable inline.should_reauth_on_vlan_change to force users to reauthenticate when they change VLAN.</simpara>
<simpara>The outgoing interface should be specified by adding in pf.conf the option interfaceSNAT in inline section. It is a comma delimited list of network interfaces like eth0,eth0.100. It&#8217;s also possible to specify a network that will be routed instead of using NAT by adding in <literal>conf/networks.conf</literal> an option nat=no under one or more network sections.</simpara>
<simpara>Another important setting is the <literal>gateway</literal> statement. Since it this the only way to get the PacketFence server inline interface IP address, it is mandatory to set it to this IP (which is supposed to be the same as in the <literal>ip</literal> statement of the inline interface in <literal>conf/pf.conf</literal>) .</simpara>
</section>
<section id="_hybrid_mode">
<title>Hybrid mode</title>
<simpara>This section applies for hybrid support for the manageable devices that support 802.1X or MAC-authentication.</simpara>
<simpara>Hybrid enforcement is a mixed method that offers the use of inline enforcement mode with VLAN enforcement mode on the same device.
This technique is covered in details in the <link linkend="_technical_introduction_to_hybrid_enforcement">"Technical introduction to Hybrid enforcement" section</link></simpara>
</section>
<section id="_web_auth_mode">
<title>Web Auth mode</title>
<simpara>This section applies for web authentication support for manageable devices that support web authentication with an external captive portal.</simpara>
<simpara>Web authentication is a method on the switch that forwards http traffic of the device to the captive portal.
With this mode, your device will never change of VLAN ID but only the ACL associated to your device will change.
Refer to the Network Devices Configuration Guide to see a sample web auth configuration on a Cisco WLC.</simpara>
</section>
<section id="_dhcp_and_dns_server_configuration_networks_conf">
<title>DHCP and DNS Server Configuration (networks.conf)</title>
<simpara>PacketFence automatically generates the DHCP configuration files for Registration, Isolation and Inline VLANs. This is done by editing the network interfaces from the configuration module of the administration Web interface (see the <link linkend="_first_step">First Step section</link>).</simpara>
<variablelist>
<varlistentry>
<term>
network
</term>
<listitem>
<simpara>
Network subnet
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
netmask
</term>
<listitem>
<simpara>
Network mask
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
gateway
</term>
<listitem>
<simpara>
PacketFence IP address in this network
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
next_hop
</term>
<listitem>
<simpara>
Used only with routed networks; IP address of the router in this network (This is used to locally create static routes to the routed networks). See the <link linkend="_routed_networks">Routed Networks section</link>)
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
domain-name
</term>
<listitem>
<simpara>
DNS name
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
dns
</term>
<listitem>
<simpara>
PacketFence IP address in this network. In inline type, set it to a valid DNS production server
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
dhcp_start
</term>
<listitem>
<simpara>
Starting IP address of the DHCP scope
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
dhcp_end
</term>
<listitem>
<simpara>
Ending IP address of the DHCP scope
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
dhcp_default_lease_time
</term>
<listitem>
<simpara>
Default DHCP lease time
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
dhcp_max_lease_time
</term>
<listitem>
<simpara>
Maximum DHCP lease time
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
type
</term>
<listitem>
<simpara>
vlan-registration or vlan-isolation or inline
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
named
</term>
<listitem>
<simpara>
Is PacketFence the DNS for this network ? (Enabled/Disabled) set it to enabled
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
dhcpd
</term>
<listitem>
<simpara>
Is PacketFence the DHCP server for this network ? (Enabled/Disabled) set it to enabled
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
nat
</term>
<listitem>
<simpara>
Is PacketFence route or NAT the traffic for this network ? (yes/no) NAT enabled by default, set to no to route
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>When starting PacketFence generates the DHCP configuration files by reading the information provided in <literal>networks.conf</literal>:</simpara>
<simpara>The DHCP configuration file is written to <literal>var/conf/dhcpd.conf</literal> using <literal>conf/dhcpd.conf</literal> as a template.</simpara>
</section>
<section id="_production_dhcp_access">
<title>Production DHCP access</title>
<simpara>In order to perform all of its access control duties, PacketFence needs to be able to map MAC addresses into IP addresses.</simpara>
<simpara>For all the networks/VLANs where you want PacketFence to have the ability to isolate a node or to have IP information about nodes, you will need to perform <emphasis role="strong">one</emphasis> of the techniques below.</simpara>
<simpara>Also note that this doesn&#8217;t need to be done for the registration, isolation VLANs and inline interfaces since PacketFence acts as the DHCP server in these networks.</simpara>
<section id="_ip_helpers_recommended">
<title>IP Helpers (recommended)</title>
<simpara>If you are already using IP Helpers for your production DHCP in your production VLANs this approach is the simplest one and the one that works the best.</simpara>
<simpara>Add PacketFence&#8217;s management IP address as the last <literal>ip helper-address</literal> statement in your network equipment. At this point PacketFence will receive a copy of all DHCP requests for that VLAN and will record what IP were distributed to what node using a <literal>pfdhcplistener</literal> daemon.</simpara>
<simpara>By default no DHCP Server should be running on that interface where you are sending the requests. This is by design otherwise PacketFence would reply to the DHCP requests which would be a bad thing.</simpara>
</section>
<section id="_obtain_a_copy_of_the_dhcp_traffic">
<title>Obtain a copy of the DHCP traffic</title>
<simpara>Get a copy of all the DHCP Traffic to a dedicated physical interface in the PacketFence server and run <literal>pfdhcplistener</literal> on that interface. It will involve configuring your switch properly to perform port mirroring (aka network span) and adding in PacketFence the proper interface statement at the operating system level and in <literal>pf.conf</literal>.</simpara>
<simpara><literal>/etc/sysconfig/network-scripts/ifcfg-eth2</literal>:</simpara>
<literallayout class="monospaced">DEVICE=eth2
ONBOOT=yes
BOOTPROTO=none</literallayout>
<simpara>Add to <literal>pf.conf</literal>: (IPs are not important they are there only so that PacketFence will start)</simpara>
<literallayout class="monospaced">[interface eth2]
mask=255.255.255.0
type=dhcp-listener
gateway=192.168.1.5
ip=192.168.1.1</literallayout>
<simpara>Restart PacketFence and you should be good to go.</simpara>
</section>
<section id="_interface_in_every_vlan">
<title>Interface in every VLAN</title>
<simpara>Because DHCP traffic is broadcast traffic, an alternative for small networks with few local VLANs is to put a VLAN interface for every VLAN on the PacketFence server and have a <literal>pfdhcplistener</literal> listen on that VLAN interface.</simpara>
<simpara>On the network side you need to make sure that the VLAN truly reaches all the way from your client to your DHCP infrastructure up to the PacketFence server.</simpara>
<simpara>On the PacketFence side, first you need an operating system VLAN interface like the one below. Stored in <literal>/etc/sysconfig/network-scripts/ifcfg-eth0.1010</literal>:</simpara>
<literallayout class="monospaced"># Engineering VLAN
DEVICE=eth0.1010
ONBOOT=yes
BOOTPROTO=static
IPADDR=10.0.101.4
NETMASK=255.255.255.0
VLAN=yes</literallayout>
<simpara>Then you need to specify in <literal>pf.conf</literal> that you are interested in that VLAN&#8217;s DHCP by setting type to <literal>dhcp-listener</literal>.</simpara>
<literallayout class="monospaced">[interface eth0.1010]
mask=255.255.255.0
type=dhcp-listener
gateway=10.0.101.1
ip=10.0.101.4</literallayout>
<simpara>Repeat the above for all your production VLANs then restart PacketFence.</simpara>
</section>
<section id="_host_production_dhcp_on_packetfence">
<title>Host production DHCP on PacketFence</title>
<simpara>It&#8217;s an option. Just modify <literal>conf/dhcpd.conf</literal> so that it will host your production DHCP properly and make sure that a <literal>pfdhcplistener</literal> runs on the same interface where production DHCP runs. However, please note that this is <emphasis role="strong">NOT</emphasis> recommended. See <ulink url="http://www.packetfence.org/bugs/view.php?id=1050">this ticket</ulink> to see why.</simpara>
</section>
</section>
<section id="_routed_networks">
<title>Routed Networks</title>
<simpara>If your isolation and registration networks are not locally-reachable (at layer 2) on the network, but routed to the PacketFence server, you&#8217;ll have to let the PacketFence server know this. PacketFence can even provide DHCP and DNS in these routed networks and provides an easy to use configuration interface.</simpara>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="docs/images/diagram-routed-net.png" width="100%" scalefit="1"/>
  </imageobject>
  <textobject><phrase>Routed network exemple diagram</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>For dhcpd, make sure that the clients DHCP requests are correctly forwarded (IP Helpers in the remote routers) to the PacketFence server. Then make sure you followed the instructions in the <link linkend="_dhcp_and_dns_server_configuration_networks_conf">DHCP and DNS Server Configuration (networks.conf)</link> for your locally accessible network.</simpara>
<simpara>If we consider the network architecture illustrated in the above schema, <literal>conf/pf.conf</literal> will include the local registration and isolation interfaces only.</simpara>
<literallayout class="monospaced">[interface eth0.2]
enforcement=vlan
ip=192.168.2.1
type=internal
mask=255.255.255.0</literallayout>
<literallayout class="monospaced">[interface eth0.3]
enforcement=vlan
ip=192.168.3.1
type=internal
mask=255.255.255.0</literallayout>
<note><simpara>PacketFence will not start unless you have at least one <emphasis>internal</emphasis> interface, so you need to create local registration and isolation VLANs even if you don&#8217;t intend to use them.  Also, the <emphasis>internal</emphasis> interfaces are the only ones on which dhcpd listens, so the remote registration and isolation subnets need to point their DHCP helper-address to those particular IPs.</simpara></note>
<simpara>Then you need to provide the routed networks information to PacketFence. You can do it through the GUI in <emphasis role="strong">Administration &#8594; Networks</emphasis> (or in <literal>conf/networks.conf</literal>).</simpara>
<simpara><literal>conf/networks.conf</literal> will look like this:</simpara>
<literallayout class="monospaced">[192.168.2.0]
netmask=255.255.255.0
gateway=192.168.2.1
next_hop=
domain-name=registration.example.com
dns=192.168.2.1
dhcp_start=192.168.2.10
dhcp_end=192.168.2.200
dhcp_default_lease_time=300
dhcp_max_lease_time=600
type=vlan-registration
named=enabled
dhcpd=enabled</literallayout>
<literallayout class="monospaced">[192.168.3.0]
netmask=255.255.255.0
gateway=192.168.3.1
next_hop=
domain-name=isolation.example.com
dns=192.168.3.1
dhcp_start=192.168.3.10
dhcp_end=192.168.3.200
dhcp_default_lease_time=300
dhcp_max_lease_time=600
type=vlan-isolation
named=enabled
dhcpd=enabled</literallayout>
<literallayout class="monospaced">[192.168.20.0]
netmask=255.255.255.0
gateway=192.168.20.254
next_hop=192.168.2.254
domain-name=registration.example.com
dns=192.168.2.1
dhcp_start=192.168.20.10
dhcp_end=192.168.20.200
dhcp_default_lease_time=300
dhcp_max_lease_time=600
type=vlan-registration
named=enabled
dhcpd=enabled</literallayout>
<literallayout class="monospaced">[192.168.30.0]
netmask=255.255.255.0
gateway=192.168.30.254
next_hop=192.168.3.254
domain-name=isolation.example.com
dns=192.168.3.1
dhcp_start=192.168.30.10
dhcp_end=192.168.30.200
dhcp_default_lease_time=300
dhcp_max_lease_time=600
type=vlan-isolation
named=enabled
dhcpd=enabled</literallayout>
<simpara>DHCP clients on the registration and isolation networks receive the PF
server IP as their DNS server (dns=x.x.x.x), and PF spoofs DNS responses to
force clients via the portal.  However, clients could manually configure
their DNS settings to escape the portal.  To prevent this you will need to
apply an ACL on the access router nearest the clients, permitting access
only to the PF server and local DHCP broadcast traffic.</simpara>
<simpara>For example, for the VLAN 20 remote registration network:</simpara>
<literallayout class="monospaced">ip access-list extended PF_REGISTRATION
 permit ip any host 192.168.2.1
 permit udp any any eq 67
 deny ip any any log
interface vlan 20
 ip address 192.168.20.254 255.255.255.0
 ip helper-address 192.168.2.1
 ip access-group PF_REGISTRATION in</literallayout>
<simpara>If your edge switches support <emphasis>vlan-isolation</emphasis> you can also apply the ACL
there.  This has the advantage of preventing machines in isolation from
attempting to attack each other.</simpara>
</section>
<section id="_freeradius_configuration">
<title>FreeRADIUS Configuration</title>
<simpara>This section presents the FreeRADIUS configuration steps. In some occasions, a RADIUS server is mandatory in order to give access to the network. For example, the usage of WPA2-Enterprise (Wireless 802.1X), MAC authentication and Wired 802.1X all requires a RADIUS server to authenticate the users and the devices, and then to push the proper VLAN to the network equipment.</simpara>
<section id="_option_1_dynamic_switch_configuration">
<title>Option 1: Dynamic switch configuration</title>
<simpara>Since PacketFence version 4.1 you are now be able to enable dynamic clients.
It mean that when you add a new switch configuration in PacketFence´s administration interface you don´t have to restart radiusd service.</simpara>
<simpara>To enable this feature make a symlink in <literal>/usr/local/pf/raddb/site-enabled</literal> directory:</simpara>
<literallayout class="monospaced">ln -s ../sites-available/dynamic-clients dynamic-clients</literallayout>
<simpara>and of course restart radiusd:</simpara>
<literallayout class="monospaced">/usr/local/pf/bin/pfcmd service radiusd restart</literallayout>
</section>
<section id="_option_2_authentication_against_active_directory_ad">
<title>Option 2: Authentication against Active Directory (AD)</title>
<simpara>Replace <literal>/usr/local/pf/raddb/modules/mschap</literal> with the following configuration:</simpara>
<literallayout class="monospaced">mschap {
        use_mppe = yes
        require_encryption = yes
        require_strong = yes
        with_ntdomain_hack = yes
        ntlm_auth = "/usr/bin/ntlm_auth --request-nt-key --username=%{%{Stripped-User-Name}:-%{mschap:User-Name:-None}} --challenge=%{mschap:Challenge:-00} --nt-response=%{mschap:NT-Response:-00}"
}</literallayout>
<section id="_samba_kerberos_winbind">
<title>Samba / Kerberos / Winbind</title>
<simpara>Install Samba 3 and NOT Samba 4. You can either use the sources or use the package for your OS. For RHEL/CentOS, do:</simpara>
<screen>yum install samba krb5-workstation</screen>
<simpara>For Debian and Ubuntu, do:</simpara>
<screen>apt-get install samba winbind krb5-user</screen>
<note><simpara>If you have Windows 7 PCs in your network, you need to use Samba version 3.5.0 (or greater).</simpara></note>
<simpara>When done with the Samba install, modify your <literal>/etc/hosts</literal> in order to add the FQDN of your Active Directory servers. Then, you need to modify <literal>/etc/krb5.conf</literal>. Here is an example for the <literal>DOMAIN.NET</literal> domain for Centos/RHEL:</simpara>
<screen>[logging]
 default = FILE:/var/log/krb5libs.log
 kdc = FILE:/var/log/krb5kdc.log
 admin_server = FILE:/var/log/kadmind.log

[libdefaults]
 default_realm = DOMAIN.NET
 dns_lookup_realm = false
 dns_lookup_kdc = false
 ticket_lifetime = 24h
 forwardable = yes

[realms]
 DOMAIN.NET = {
  kdc = adserver.domain.net:88
  admin_server = adserver.domain.net:749
  default_domain = domain.net
 }
[domain_realm]
 .domain.net = DOMAIN.NET
 domain.net = DOMAIN.NET

[appdefaults]
 pam = {
   debug = false
   ticket_lifetime = 36000
   renew_lifetime = 36000
   forwardable = true
   krb4_convert = false
 }</screen>
<simpara>For Debian and Ubuntu:</simpara>
<screen>  [logging]
  default = FILE:/var/log/krb5libs.log
  kdc = FILE:/var/log/krb5kdc.log
  admin_server = FILE:/var/log/kadmind.log
  [libdefaults]
  default_realm = DOMAIN.NET
  ticket_lifetime = 24h
  forwardable = yes
  [appdefaults]
  pam = {
  debug = false
  ticket_lifetime = 36000
  renew_lifetime = 36000
  forwardable = true
  krb4_convert = false
  }</screen>
<simpara>Next, edit <literal>/etc/samba/smb.conf</literal>. Again, here is an example for our <literal>DOMAIN.NET</literal> for Centos/RHEL:</simpara>
<screen>  [global]
  workgroup = DOMAIN
  server string = %h
  security = ads
  passdb backend = tdbsam
  realm = DOMAIN.NET
  encrypt passwords = yes
  winbind use default domain = yes
  client NTLMv2 auth = yes
  preferred master = no
  domain master = no
  local master = no
  load printers = no
  log level = 1 winbind:5 auth:3
  winbind max clients = 750
  winbind max domain connections = 15</screen>
<simpara>For Debian and Ubuntu:</simpara>
<screen> [global]
  workgroup = DOMAIN
  server string = Samba Server Version %v
  security = ads
  realm = DOMAIN.NET
  password server = 192.168.1.1
  domain master = no
  local master = no
  preferred master = no
  winbind separator = +
  winbind enum users = yes
  winbind enum groups = yes
  winbind use default domain = yes
  winbind nested groups = yes
  winbind refresh tickets = yes
  template homedir = /home/%D/%U
  template shell = /bin/bash
  client use spnego = yes
  client ntlmv2 auth = yes
  encrypt passwords = yes
  restrict anonymous = 2
  log file = /var/log/samba/log.%m
  max log size = 50</screen>
<simpara>Issue a <literal>kinit</literal> and <literal>klist</literal> in order to get and verify the Kerberos token:</simpara>
<literallayout class="monospaced"># kinit administrator
# klist</literallayout>
<simpara>After that, you need to start samba, and join the machine to the domain:</simpara>
<literallayout class="monospaced"># service smb start
# chkconfig --level 345 smb on
# net ads join -U administrator</literallayout>
<simpara>Note that for Debian and Ubuntu you will probably have this error:</simpara>
<literallayout class="monospaced"># kinit succeeded but ads_sasl_spnego_krb5_bind failed: Invalid credentials
# Join to domain is not valid: Invalid credentials</literallayout>
<simpara>For Centos/RHEL:</simpara>
<literallayout class="monospaced"># usermod -a -G wbpriv pf</literallayout>
<simpara>Finally, start <literal>winbind</literal>, and test the setup using <literal>ntlm_auth</literal> and <literal>radtest</literal>:</simpara>
<literallayout class="monospaced"># service winbind start
# chkconfig --level 345 winbind on</literallayout>
<simpara>For Debian and Ubuntu:</simpara>
<literallayout class="monospaced"># chgrp pf /var/run/samba/winbindd_privileged/
# ntlm_auth --username myDomainUser
# radtest -t mschap -x myDomainUser myDomainPassword localhost:18120 12 testing123
  Sending Access-Request of id 108 to 127.0.0.1 port 18120
      User-Name = "myDomainUser"
      NAS-IP-Address = 10.0.0.1
      NAS-Port = 12
      Message-Authenticator = 0x00000000000000000000000000000000
      MS-CHAP-Challenge = 0x79d62c9da4e55104
      MS-CHAP-Response = 0x000100000000000000000000000000000000000000000000000091c843b420f0dec4228ed2f26bff07d5e49ad9a2974229e5
  rad_recv: Access-Accept packet from host 127.0.0.1 port 18120, id=108, length=20</literallayout>
</section>
</section>
<section id="_option_3_local_authentication">
<title>Option 3: Local Authentication</title>
<simpara>Add your user&#8217;s entries at the end of the <literal>/usr/local/pf/raddb/users</literal> file with the following format:</simpara>
<literallayout class="monospaced">username Cleartext-Password := "password"</literallayout>
</section>
<section id="_option_4_authentication_against_openldap">
<title>Option 4: Authentication against OpenLDAP</title>
<literallayout class="monospaced">To be contributed...</literallayout>
</section>
<section id="_tests">
<title>Tests</title>
<simpara>Test your setup with <literal>radtest</literal> using the following command and make sure you get an <literal>Access-Accept</literal> answer:</simpara>
<screen># radtest dd9999 Abcd1234 localhost:18120 12 testing123
Sending Access-Request of id 74 to 127.0.0.1 port 18120
  User-Name = "dd9999"
  User-Password = "Abcd1234"
  NAS-IP-Address = 255.255.255.255
  NAS-Port = 12
rad_recv: Access-Accept packet from host 127.0.0.1:18120, id=74, length=20</screen>
</section>
<section id="_debug">
<title>Debug</title>
<simpara>First, check the FreeRADIUS logs. The file is located at <literal>/usr/local/pf/logs/radius.log</literal>.</simpara>
<simpara>If this didn&#8217;t help, run FreeRADIUS in debug mode. To do so, start it using the following command:</simpara>
<literallayout class="monospaced"># radiusd -X -d /usr/local/pf/raddb</literallayout>
<simpara>Additionally there is a <literal>raddebug</literal> tool that can extract debug logs from a
running FreeRADIUS daemon. PacketFence&#8217;s FreeRADIUS is preconfigured with such support.</simpara>
<simpara>In order to have an output from <literal>raddebug</literal>, you need to either:</simpara>
<orderedlist numeration="loweralpha">
<listitem>
<simpara>
Make sure user <literal>pf</literal> has a shell in <literal>/etc/passwd</literal>, add <literal>/usr/sbin</literal> to PATH (<literal>export PATH=/usr/sbin:$PATH</literal>) and execute <literal>raddebug</literal> as <literal>pf</literal>
</simpara>
</listitem>
<listitem>
<simpara>
Run <literal>raddebug</literal> as root (less secure!)
</simpara>
</listitem>
</orderedlist>
<simpara>Now you can run <literal>raddebug</literal> easily:</simpara>
<literallayout class="monospaced">raddebug -t 300 -d /usr/local/pf/raddb</literallayout>
<simpara>The above will output FreeRADIUS' debug logs for 5 minutes. See <literal>man raddebug</literal> for all the options.</simpara>
</section>
</section>
<section id="_starting_packetfence_services">
<title>Starting PacketFence Services</title>
<simpara>Once PacketFence is fully installed and configured, start the services using the following command :</simpara>
<literallayout class="monospaced">service packetfence start</literallayout>
<simpara>You may verify using the <literal>chkconfig</literal> command that the PacketFence service is automatically started at boot time.</simpara>
</section>
<section id="_log_files">
<title>Log files</title>
<simpara>Here are the most important PacketFence log files:</simpara>
<variablelist>
<varlistentry>
<term>
/usr/local/pf/logs/packetfence.log
</term>
<listitem>
<simpara>
PacketFence Core Log
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
/usr/local/pf/logs/portal_access_log
</term>
<listitem>
<simpara>
Apache – Captive Portal Access Log
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
/usr/local/pf/logs/portal_error_log
</term>
<listitem>
<simpara>
Apache – Captive Portal Error Log
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
/usr/local/pf/logs/admin_access_log
</term>
<listitem>
<simpara>
Apache – Web Admin/Services Access Log
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
/usr/local/pf/logs/admin_error_log
</term>
<listitem>
<simpara>
Apache – Web Admin/Services Error Log
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
/usr/local/pf/logs/admin_debug_log
</term>
<listitem>
<simpara>
Apache – Web Admin Debug Log
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
/usr/local/pf/logs/webservices_access_log
</term>
<listitem>
<simpara>
Apache – Webservices Access Log
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
/usr/local/pf/logs/webservices_error_log
</term>
<listitem>
<simpara>
Apache – Webservices Error Log
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>There are other log files in <literal>/usr/local/pf/logs/</literal> that could be relevant depending on what issue you are experiencing. Make sure you take a look at them.</simpara>
<simpara>The logging system&#8217;s configuration file is <literal>/usr/local/pf/conf/log.conf</literal>. It contains the configuration for the <literal>packetfence.log</literal> file (<literal>Log::Log4Perl</literal>) and you normally don&#8217;t need to modify it.</simpara>
</section>
<section id="_passthrough">
<title>Passthrough</title>
<simpara>In order to use the passthrough feature in PacketFence, you need to enable it from the GUI in
<emphasis role="strong">Configuration &#8594; Trapping</emphasis> and check <emphasis role="strong">Passthrough</emphasis>.</simpara>
<simpara>There are two solutions for passthroughs - one using DNS resolution and iptables and the other one using Apache&#8217;s mod_proxy module.
When enabled, PacketFence will use pfdns if you defined <emphasis role="strong">Passthroughs</emphasis>, or Apache mod-proxy if you defined <emphasis role="strong">Proxy Passthroughs</emphasis> to allow trapped devices to reach web sites.</simpara>
<simpara>*DNS passthrough:
Add a new FQDN (should be a wildcard domain like *.google.com) in the Passthroughs section. When PacketFence receives a DNS request for this domain, it will answer the real IP address and punch a hole in the firewall (using iptables) to allow access. With this method, PacketFence must be the default gateway of your device.</simpara>
<simpara>*mod_proxy passthrough:
Add a new FQDN (should be a wildcard domain like *.google.com) in the Proxy Passthroughs section. For this FQDN, PacketFence will answer the IP address of the captive portal and when a device hits the captive portal, PacketFence will detect that this FQDN has a passthrough configuration and will forward the traffic to mod_proxy.</simpara>
<simpara>These two methods can be used together but DNS-based passthroughs have higher priority.</simpara>
</section>
<section id="_proxy_interception">
<title>Proxy Interception</title>
<simpara>PacketFence enables you to intercept proxy requests and forward them to the captive portal. It only works in layer 2 network because PacketFence must be the default gateway.
In order to use the Proxy Interception feature, you need to enable it from the GUI in
<emphasis role="strong">Configuration &#8594; Trapping</emphasis> and check <emphasis role="strong">Proxy Interception</emphasis>.</simpara>
<simpara>Add the port you want to intercept (like 8080 or 3128) and add a new entry in the <literal>/etc/hosts</literal> file to resolve the fully qualified domain name (fqdn) of the captive portal to the IP address of the registration interface. This modification is mandatory in order for Apache to receives the proxy requests.</simpara>
</section>
</chapter>
<chapter id="_configuration_by_example">
<title>Configuration by example</title>
<simpara>Here is an end-to-end sample configuration of PacketFence in "Hybrid" mode (VLAN mode and Inline mode at the same time).</simpara>
<section id="_assumptions_2">
<title>Assumptions</title>
<simpara>Throughout this configuration example we use the following assumptions for our network infrastructure:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
There are two different types of manageable switches in our network: Cisco Catalyst 2900XL and Cisco Catalyst 2960, and one unmanageable device.
</simpara>
</listitem>
<listitem>
<simpara>
VLAN 1 is the "normal" VLAN - users with the "default" role will be assigned to it
</simpara>
</listitem>
<listitem>
<simpara>
VLAN 2 is the registration VLAN (unregistered devices will be put in this VLAN)
</simpara>
</listitem>
<listitem>
<simpara>
VLAN 3 is the isolation VLAN (isolated devices will be put in this VLAN)
</simpara>
</listitem>
<listitem>
<simpara>
VLANs 2 and 3 are spanned throughout the network
</simpara>
</listitem>
<listitem>
<simpara>
VLAN 4 is the MAC detection VLAN (void VLAN)
</simpara>
</listitem>
<listitem>
<simpara>
VLAN 4 must be defined on all the switches that do not support port-security (in our example Catalyst 2900XL do not support port-security with static MAC address). No need to put it in the trunk port.
</simpara>
</listitem>
<listitem>
<simpara>
VLAN 5 is the inline VLAN (In-Band, for unmanageable devices)
</simpara>
</listitem>
<listitem>
<simpara>
We want to isolate computers using Limewire (peer-to-peer software)
</simpara>
</listitem>
<listitem>
<simpara>
We use Snort as NIDS
</simpara>
</listitem>
<listitem>
<simpara>
The traffic monitored by Snort is spanned on eth1
</simpara>
</listitem>
<listitem>
<simpara>
The DHCP server on the PacketFence box that will take care of IP address distribution in VLANs 2, 3 and 5
</simpara>
</listitem>
<listitem>
<simpara>
The DNS server on the PacketFence box that will take care of domain resolution in VLANs 2 and 3
</simpara>
</listitem>
</itemizedlist>
<simpara>The network setup looks like this:</simpara>
<informaltable
frame="topbot"
rowsep="1" colsep="0"
>
<tgroup cols="5">
<colspec colname="col_1" colwidth="10*"/>
<colspec colname="col_2" colwidth="20*"/>
<colspec colname="col_3" colwidth="20*"/>
<colspec colname="col_4" colwidth="20*"/>
<colspec colname="col_5" colwidth="30*"/>
<thead>
<row>
<entry align="left" valign="top">VLAN ID  </entry>
<entry align="left" valign="top">VLAN Name     </entry>
<entry align="left" valign="top">Subnet         </entry>
<entry align="left" valign="top">Gateway     </entry>
<entry align="left" valign="top">PacketFence Address</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara>1</simpara></entry>
<entry align="left" valign="top"><simpara>Normal</simpara></entry>
<entry align="left" valign="top"><simpara>192.168.1.0/24</simpara></entry>
<entry align="left" valign="top"><simpara>192.168.1.1</simpara></entry>
<entry align="left" valign="top"><simpara>192.168.1.5</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>2</simpara></entry>
<entry align="left" valign="top"><simpara>Registration</simpara></entry>
<entry align="left" valign="top"><simpara>192.168.2.0/24</simpara></entry>
<entry align="left" valign="top"><simpara>192.168.2.1</simpara></entry>
<entry align="left" valign="top"><simpara>192.168.2.1</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>3</simpara></entry>
<entry align="left" valign="top"><simpara>Isolation</simpara></entry>
<entry align="left" valign="top"><simpara>192.168.3.0/24</simpara></entry>
<entry align="left" valign="top"><simpara>192.168.3.1</simpara></entry>
<entry align="left" valign="top"><simpara>192.168.3.1</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>4</simpara></entry>
<entry align="left" valign="top"><simpara>Mac Detection</simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>5</simpara></entry>
<entry align="left" valign="top"><simpara>Inline</simpara></entry>
<entry align="left" valign="top"><simpara>192.168.5.0/24</simpara></entry>
<entry align="left" valign="top"><simpara>192.168.5.1</simpara></entry>
<entry align="left" valign="top"><simpara>192.168.5.1</simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara>100</simpara></entry>
<entry align="left" valign="top"><simpara>Voice</simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
<entry align="left" valign="top"><simpara></simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
</section>
<section id="_network_interfaces">
<title>Network Interfaces</title>
<simpara>Here are the NICs startup scripts on PacketFence.</simpara>
<simpara><literal>/etc/sysconfig/network-scripts/ifcfg-eth0</literal>:</simpara>
<literallayout class="monospaced">DEVICE=eth0
BROADCAST=192.168.1.255
IPADDR=192.168.1.5
NETMASK=255.255.255.0
NETWORK=192.168.1.0
ONBOOT=yes
TYPE=Ethernet</literallayout>
<simpara><literal>/etc/sysconfig/network-scripts/ifcfg-eth0.2</literal>:</simpara>
<literallayout class="monospaced">DEVICE=eth0.2
ONBOOT=yes
BOOTPROTO=static
IPADDR=192.168.2.1
NETMASK=255.255.255.0
VLAN=yes</literallayout>
<simpara><literal>/etc/sysconfig/network-scripts/ifcfg-eth0.3</literal>:</simpara>
<literallayout class="monospaced">DEVICE=eth0.3
ONBOOT=yes
BOOTPROTO=static
IPADDR=192.168.3.1
NETMASK=255.255.255.0
VLAN=yes</literallayout>
<simpara><literal>/etc/sysconfig/network-scripts/ifcfg-eth0.5</literal>:</simpara>
<literallayout class="monospaced">DEVICE=eth0.5
ONBOOT=yes
BOOTPROTO=static
IPADDR=192.168.5.1
NETMASK=255.255.255.0
VLAN=yes</literallayout>
<simpara><literal>/etc/sysconfig/network-scripts/ifcfg-eth1</literal>. This NIC is used for the mirror of the traffic monitored by Snort.</simpara>
<literallayout class="monospaced">DEVICE=eth1
ONBOOT=yes
BOOTPROTO=none</literallayout>
<section id="_trap_receiver">
<title>Trap receiver</title>
<simpara>PacketFence uses <literal>snmptrapd</literal> as the trap receiver. It stores the community name used by the switch to send traps in the switch config file (<literal>/usr/local/pf/conf/switches.conf</literal>):</simpara>
<literallayout class="monospaced">[default]
SNMPCommunityTrap = public</literallayout>
</section>
</section>
<section id="_switch_setup">
<title>Switch Setup</title>
<simpara>In our example, we enable linkUp/linkDown on a Cisco 2900LX and Port Security on a Cisco Catalyst 2960. Please consult the <ulink url="http://www.packetfence.org/documentation/">Network Devices Configuration Guide</ulink> for the complete list of supported switches and configuration instructions.</simpara>
<section id="_linkup_linkdown_mac_notification">
<title>linkUp/linkDown + MAC Notification</title>
<simpara>On the 2900XL.</simpara>
<simpara>global setup</simpara>
<literallayout class="monospaced">snmp-server enable traps snmp linkdown linkup
snmp-server enable traps mac-notification
snmp-server host 192.168.1.5 trap version 2c public snmp mac-notification
mac-address-table notification interval 0
mac-address-table notification
mac-address-table aging-time 3600</literallayout>
<simpara>on each interface</simpara>
<literallayout class="monospaced">switchport mode access
switchport access vlan 4
snmp trap mac-notification added</literallayout>
</section>
<section id="_port_security">
<title>Port Security</title>
<simpara>On the 2960.</simpara>
<simpara>global setup</simpara>
<literallayout class="monospaced">snmp-server enable traps port-security
snmp-server enable traps port-security trap-rate 1
snmp-server host 192.168.1.5 version 2c public port-security</literallayout>
<simpara>On each interface, you need to initialize the port security by authorizing a fake MAC address with the following commands</simpara>
<literallayout class="monospaced">switchport access vlan 4
switchport port-security
switchport port-security maximum 2
switchport port-security maximum 1 vlan access
switchport port-security violation restrict
switchport port-security mac-address 0200.0000.00xx</literallayout>
<simpara>where <literal>xx</literal> stands for the interface index.</simpara>
<note><simpara>Don&#8217;t forget to update the startup-config.</simpara></note>
</section>
</section>
<section id="_switches_conf">
<title>switches.conf</title>
<note><simpara>You can use the Web Administration interface instead of performing the configuration in the flat files.</simpara></note>
<simpara>Here is the <literal>/usr/local/pf/conf/switches.conf</literal> file for our setup. See <link linkend="_network_devices_definition_switches_conf">Network Device Definition</link> for more information about the content of this file.</simpara>
<screen>[default]
SNMPCommunityRead = public
SNMPCommunityWrite = private
SNMPommunityTrap = public
SNMPVersion = 1
defaultVlan = 1
registrationVlan = 2
isolationVlan = 3
macDetectionVlan = 4
VoIPEnabled = no

[192.168.1.100]
type = Cisco::Catalyst_2900XL
mode = production
uplink = 24

[192.168.1.101]
type = Cisco::Catalyst_2960
mode = production
uplink = 25
defaultVlan = 10
radiusSecret=useStrongerSecret</screen>
<simpara>If you want to have a different read/write communities name for each switch, declare it in each switch section.</simpara>
</section>
<section id="_pf_conf">
<title>pf.conf</title>
<simpara>Here is the <literal>/usr/local/pf/conf/pf.conf</literal> file for our setup. For more information about <literal>pf.conf</literal> see <link linkend="_global_configuration_file_pf_conf">Global configuration file (pf.conf) section</link>.</simpara>
<screen>[general]
domain=yourdomain.org
#Put your External/Infra DNS servers here
dnsservers=4.2.2.2,4.2.2.1
dhcpservers=192.168.2.1,192.168.3.1,192.168.5.1

[trapping]
registration=enabled
detection=enabled
range=192.168.2.0/24,192.168.3.0/24,192.168.5.0/24

[interface eth0]
mask=255.255.255.0
type=management
gateway=192.168.1.1
ip=192.168.1.5

[interface eth0.2]
mask=255.255.255.0
type=internal
enforcement=vlan
gateway=192.168.2.1
ip=192.168.2.1

[interface eth0.3]
mask=255.255.255.0
type=internal
enforcement=vlan
gateway=192.168.3.1
ip=192.168.3.1

[interface eth0.5]
mask=255.255.255.0
type=internal
enforcement=inline
gateway=192.168.5.1
ip=192.168.5.1

[interface eth1]
mask=255.255.255.0
type=monitor
gateway=192.168.1.5
ip=192.168.1.1</screen>
<note><simpara>If you are running in an high-available setup (with a cluster IP), make sure to add the <literal>vip</literal> parameter to the configured <literal>management</literal> interface so that RADIUS dynamic auth messages can reach the network equipment correctly.</simpara></note>
<screen>[interface eth0]
mask=255.255.255.0
type=management
gateway=192.168.1.1
ip=192.168.1.5
vip=192.168.1.6</screen>
</section>
<section id="_networks_conf">
<title>networks.conf</title>
<simpara>Here is the <literal>/usr/local/pf/conf/networks.conf</literal> file for our setup. For more information about <literal>networks.conf</literal> see <link linkend="_dhcp_and_dns_server_configuration_networks_conf">DHCP and DNS Server configuration</link>.</simpara>
<screen>[192.168.2.0]
netmask=255.255.255.0
gateway=192.168.2.1
next_hop=192.168.2.254
domain-name=registration.example.com
dns=192.168.2.1
dhcp_start=192.168.2.10
dhcp_end=192.168.2.200
dhcp_default_lease_time=300
dhcp_max_lease_time=600
type=vlan-registration
named=enabled
dhcpd=enabled

[192.168.3.0]
netmask=255.255.255.0
gateway=192.168.3.1
next_hop=192.168.3.254
domain-name=isolation.example.com
dns=192.168.3.1
dhcp_start=192.168.3.10
dhcp_end=192.168.3.200
dhcp_default_lease_time=300
dhcp_max_lease_time=600
type=vlan-isolation
named=enabled
dhcpd=enabled

[192.168.5.0]
netmask=255.255.255.0
gateway=192.168.5.1
next_hop=
domain-name=inline.example.com
dns=4.2.2.2,4.2.2.1
dhcp_start=192.168.5.10
dhcp_end=192.168.5.254
dhcp_default_lease_time=300
dhcp_max_lease_time=600
type=inline
named=enabled
dhcpd=enabled</screen>
</section>
<section id="_inline_enforcement_specifics">
<title>Inline enforcement specifics</title>
<simpara>To see another important optional parameter that can be altered to do inline enforcement see the <link linkend="_inline_enforcement_configuration">Inline enforcement configuration section</link>.</simpara>
<simpara>In order to have the inline mode properly working, you need to enable IP forwarding on your servers. To do it permanently, look in the <literal>/etc/sysctl.conf</literal>, and set the following line:</simpara>
<literallayout class="monospaced"># Controls IP packet forwarding
net.ipv4.ip_forward = 1</literallayout>
<simpara>Save the file, and execute <literal>sysctl -p</literal> to reload the kernel parameters.</simpara>
</section>
</chapter>
<chapter id="_optional_components">
<title>Optional components</title>
<section id="_blocking_malicious_activities_with_violations">
<title>Blocking malicious activities with violations</title>
<simpara>Policy violations allow you to restrict client system access based on violations of certain policies. For example, if you do not allow P2P type traffic on your network, and you are running the appropriate software to detect it and trigger a violation for a given client, PacketFence will give that client a "blocked" page which can be customized to your wishes.</simpara>
<simpara>In order to be able to block malicious activities, you need to install and configure the SNORT or Suricata IDS to talk with PacketFence.</simpara>
<section id="_snort">
<title>Snort</title>
<section id="_installation_2">
<title>Installation</title>
<simpara>The installation procedure is quite simple for SNORT. We maintain a working version on the PacketFence repository. To install it, simply run the following command:</simpara>
<literallayout class="monospaced">yum install snort</literallayout>
</section>
<section id="_configuration_2">
<title>Configuration</title>
<simpara>PacketFence provides a basic <literal>snort.conf</literal> template that you may need to edit depending of the Snort version. The file is located in <literal>/usr/local/pf/conf</literal>. It is rarely necessary to change anything in that file to make Snort work and trap alerts. DO NOT edit the <literal>snort.conf</literal> located in <literal>/usr/local/pf/var/conf</literal>, all the modification will be destroyed on each PacketFence restart.</simpara>
</section>
</section>
<section id="_suricata">
<title>Suricata</title>
<section id="_installation_3">
<title>Installation</title>
<simpara>Since the suricata IDS is not packaged with the distros (except maybe Fedora, which we do not officially support), you need to build it the "old" way.</simpara>
<simpara>The OISF provides a really well written how-to for that.  It&#8217;s available here: <ulink url="https://redmine.openinfosecfoundation.org/projects/suricata/wiki/CentOS5">https://redmine.openinfosecfoundation.org/projects/suricata/wiki/CentOS5</ulink></simpara>
</section>
<section id="_configuration_3">
<title>Configuration</title>
<simpara>PacketFence will provide you with a basic <literal>suricata.yaml</literal> that you can modify to suit you own needs.  The file is located in <literal>/usr/local/pf/conf</literal>.</simpara>
</section>
</section>
<section id="_violations">
<title>Violations</title>
<simpara>In order to make PacketFence react to the Snort alerts, you need to explicitly tell the software to do so. Otherwise, the alerts will be discarded. This is quite simple to accomplish. In fact, you need to create a violation and add the Snort alert SID in the trigger section of a Violation.</simpara>
<simpara>PacketFence policy violations are controlled using the <literal>/usr/local/pf/conf/violations.conf</literal> configuration file. The violation format is as follows:</simpara>
<literallayout class="monospaced">[1234]
desc=Your Violation Description
priority=8
url=/content/index.php?template=&lt;template&gt;
redirect_url=/proxies/tools/stinger.exe
enable=Y
trigger=Detect::2200032,Nessus::11808
actions=email,log,trap
vlan=isolationVlan
whitelisted_categories=</literallayout>
<informaltable tabstyle="horizontal" frame="none" colsep="0" rowsep="0"><tgroup cols="2"><colspec colwidth="15*"/><colspec colwidth="85*"/><tbody valign="top">
<row>
<entry>
<simpara>
<literal>[1234]</literal>
</simpara>
</entry>
<entry>
<simpara>
The violation ID. Any integer except 1200000-120099 which is reserved for required administration violations.
</simpara>
</entry>
</row>
<row>
<entry>
<simpara>
<literal>desc</literal>
</simpara>
</entry>
<entry>
<simpara>
single line description of violation
</simpara>
</entry>
</row>
<row>
<entry>
<simpara>
<literal>priority</literal>
</simpara>
</entry>
<entry>
<simpara>
Range 1-10, with 1 the higest priority and 10 the lowest. Higher priority violations will be addressed first if a host has more than one.
</simpara>
</entry>
</row>
<row>
<entry>
<simpara>
<literal>template</literal>
</simpara>
</entry>
<entry>
<simpara>
Template name to use while in violation. It must match a HTML file name (without the extension) of the <literal>violations</literal> templates directory.
</simpara>
</entry>
</row>
<row>
<entry>
<simpara>
<literal>redirect_url</literal>
</simpara>
</entry>
<entry>
<simpara>
The user is redirected to this URL after he re-enabled his network access on the remediation page.
</simpara>
</entry>
</row>
<row>
<entry>
<simpara>
<literal>enable</literal>
</simpara>
</entry>
<entry>
<simpara>
If enable is set to <emphasis>N</emphasis>, this violation is disabled and no additional violations of this type will be added.
</simpara>
</entry>
</row>
<row>
<entry>
<simpara>
<literal>trigger</literal>
</simpara>
</entry>
<entry>
<simpara>
Method to reference external detection methods. Trigger is formatted as follows <literal>type::ID</literal>. The type can be <literal>Detect</literal> (Snort), <literal>Nessus</literal>, <literal>OpenVAS</literal>, <literal>OS</literal> (DHCP Fingerprint Detection), <literal>UserAgent</literal> (Browser signature), <literal>VendorMAC</literal> (MAC address class), <literal>SoH</literal> (Statement of Health filter), <literal>Accounting</literal>, etc. In the above example, 2000032 is the Snort ID and 11808 is the Nessus plugin number. The Snort ID does NOT have to match the violation ID.
</simpara>
</entry>
</row>
<row>
<entry>
<simpara>
<literal>actions</literal>
</simpara>
</entry>
<entry>
<simpara>
This is the list of actions that will be executed on a violation addition. The actions can be:
</simpara>
<variablelist>
<varlistentry>
<term>
<literal>log</literal>
</term>
<listitem>
<simpara>
Log a message to the file specified in <literal>[alerting].log</literal>
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>email</literal>
</term>
<listitem>
<simpara>
Email the address specified in <literal>[alerting].emailaddr</literal>, using <literal>[alerting].smtpserver</literal>. Multiple <literal>emailaddr</literal> can be sperated by comma.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>trap</literal>
</term>
<listitem>
<simpara>
Isolate the host and place them in violation. It opens a violation and leaves it open. If trap is not there, a violation is opened and then automatically closed.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>winpopup</literal>
</term>
<listitem>
<simpara>
send a windows popup message. You need to configure <literal>[alerting].winserver</literal>, <literal>[alerting].netbiosname</literal> in <literal>pf.conf</literal> when using this option.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>external</literal>
</term>
<listitem>
<simpara>
execute an external command, specified in <literal>[paths].externalapi</literal>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>close</literal>
</term>
<listitem>
<simpara>
close the violation ID specified in the vclose field.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>role</literal>
</term>
<listitem>
<simpara>
change the node&#8217;s role to the one specified in the target_category field.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>autoreg</literal>
</term>
<listitem>
<simpara>
register the node.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>unreg</literal>
</term>
<listitem>
<simpara>
deregister the node.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</entry>
</row>
<row>
<entry>
<simpara>
<literal>vlan</literal>
</simpara>
</entry>
<entry>
<simpara>
Destination VLAN where PacketFence should put the client when a violation of this type is open. The VLAN value can be:
</simpara>
<variablelist>
<varlistentry>
<term>
<literal>isolationVlan</literal>
</term>
<listitem>
<simpara>
Isolation VLAN as specified in <literal>switches.conf</literal>. This is the recommended value for most violation types.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>registrationVlan</literal>
</term>
<listitem>
<simpara>
Registration VLAN as specified in <literal>switches.conf</literal>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>normalVlan</literal>
</term>
<listitem>
<simpara>
Normal VLAN as specified in <literal>switches.conf</literal>. Note: It is preferable not to trap than to trap and put in normal VLAN. Make sure you understand what you are doing.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</entry>
</row>
<row>
<entry>
<simpara>
<literal>whitelisted_categories</literal>
</simpara>
</entry>
<entry>
<simpara>
Nodes in a category listed in <literal>whitelisted_categories</literal> won&#8217;t be affected by a violation of this type. Format is a comma separated list of category names.
</simpara>
</entry>
</row>
</tbody></tgroup></informaltable>
<simpara>Also included in <literal>violations.conf</literal> is the defaults section. The defaults section will set a default value for every violation in the configuration. If a configuration value is not specified in the specific ID, the default will be used:</simpara>
<literallayout class="monospaced">[defaults]
priority=4
max_enable=3
actions=email,log
auto_enable=Y
enable=N
grace=120m
window=0
vclose=
target_category=
button_text=Enable Network
snort_rules=local.rules,bleeding-attack_response.rules,bleeding-exploit.rules,bleeding-p2p.rules,bleeding-scan.rules,bleeding-virus.rules
vlan=isolationVlan
whitelisted_categories=</literallayout>
<variablelist>
<varlistentry>
<term>
<literal>max_enable</literal>
</term>
<listitem>
<simpara>
Number of times a host will be able to try and self remediate before they are locked out and have to call the help desk. This is useful for users who just <emphasis>click through</emphasis> violation pages.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>auto_enable</literal>
</term>
<listitem>
<simpara>
Specifies if a host can self remediate the violation (enable network button) or if they can not and must call the help desk.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>grace</literal>
</term>
<listitem>
<simpara>
Amount of time before the violation can reoccur. This is useful to allow hosts time (in the example 2 minutes) to download tools to fix their issue, or shutoff their peer-to-peer application.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>window</literal>
</term>
<listitem>
<simpara>
Amount of time before a violation will be closed automatically.  Instead of allowing people to reactivate the network, you may want to open a violation for a defined amount of time instead.  You can use the allowed time modifiers or the dynamic keyword.  Note that the dynamic keyword only works for accounting violations.  Dynamic will open the violation according to the time you set in the
accounting violation (ie. You have an accounting violation for 10GB/month.  If you bust the bandwidth after 3 days, the violation will open and the release date will be set for the last day of the current month.)
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>vclose</literal>
</term>
<listitem>
<simpara>
When selecting the "close" action, triggering the violation will close the one you select in the vclose field. This is an experimentalworkflow for Mobile Device Management (MDM).
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>target_category</literal>
</term>
<listitem>
<simpara>
When selecting the "role" action, triggering the violation will change the node&#8217;s role to the one you select in the target_category field.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>button_text</literal>
</term>
<listitem>
<simpara>
Text displayed on the violation form to hosts.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
<literal>snort_rules</literal>
</term>
<listitem>
<simpara>
The Snort rules file is the administrators responsibility. Please change this to point to your violation rules file(s). If you do not specify a full path, the default is <literal>/usr/local/pf/conf/snort</literal>. If you need to include more than one file, just separate each filename with a comma.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<note><simpara><literal>violations.conf</literal> is loaded at startup. A restart is required when
changes are made to this file.</simpara></note>
</section>
<section id="_example_violation">
<title>Example violation</title>
<simpara>In our example we want to isolate people using Limewire. Here we assume Snort is installed and configured to send alerts to PacketFence. Now we need to configure PacketFence isolation.</simpara>
<simpara>Enable Limewire violation in <literal>/usr/local/pf/conf/violations.conf</literal> and configure it to trap.</simpara>
<literallayout class="monospaced">[2001808]
desc=P2P (Limewire)
priority=8
url=/content/index.php?template=p2p
actions=log,trap
enable=Y
max_enable=1
trigger=Detect::2001808</literallayout>
</section>
</section>
<section id="_compliance_checks">
<title>Compliance Checks</title>
<simpara>PacketFence supports either Nessus or OpenVAS as a scanning engine for compliance checks.</simpara>
<section id="_installation_4">
<title>Installation</title>
<section id="_nessus">
<title>Nessus</title>
<simpara>Please visit <ulink url="http://www.nessus.org/download/">http://www.nessus.org/download/</ulink> to download and install the Nessus package for your operating system. You will also need to register for the HomeFeed (or the ProfessionalFeed) in order to get the plugins.</simpara>
<simpara>After you installed Nessus, follow the Nessus documentation for the configuration of the Nessus Server, and to create a user for PacketFence.</simpara>
</section>
<section id="_openvas">
<title>OpenVAS</title>
<simpara>Please visit <ulink url="http://www.openvas.org/install-packages.html#openvas4_centos_atomic">http://www.openvas.org/install-packages.html#openvas4_centos_atomic</ulink> to configure the correct repository to be able to install the latest OpenVAS scanning engine.</simpara>
<simpara>Once installed, please make sure to follow the instructions to correctly configure the scanning engine and create a scan configuration that will fit your needs. You&#8217;ll also need to create a user for PacketFence to be able to communicate with the server.</simpara>
<simpara>It is important to get the correct scan config ID and NBE report format ID to populate the parameters in the PacketFence configuration file. The easiest way to get these IDs is by downloading both of the scan configuration and report format from the OpenVAS web gui and retrieve the IDs in the filenames.</simpara>
<simpara>For example <literal>report-format-f5c2a364-47d2-4700-b21d-0a7693daddab.xml</literal> gives report format ID <literal>f5c2a364-47d2-4700-b21d-0a7693daddab</literal>.</simpara>
</section>
</section>
<section id="_configuration_4">
<title>Configuration</title>
<simpara>In order for the compliance checks to correctly work with PacketFence (communication and generate violations inside PacketFence), you must configure two sections:</simpara>
<section id="_pf_conf_2">
<title>pf.conf</title>
<simpara>Adjust the settings in the scan section like the following:
Don&#8217;t hesitate to refer to the <literal>documentation.conf</literal> file for any help on these paramaters and which of them to configure.</simpara>
<simpara>Using Nessus:</simpara>
<literallayout class="monospaced">[scan]
engine=nessus
host=127.0.0.1
nessus_clientpolicy=basic-policy
pass=nessusUserPassword
registration=enabled
user=nessusUsername</literallayout>
<simpara>Of course the basic-policy must exist on the nessus server.
If you want to use a different nessus policy by category, you have to adjust settings like the following (if the policy doesn&#8217;t exist, PacketFence will use the default policy defined by nessus_clientpolicy):</simpara>
<literallayout class="monospaced">[nessus_category_policy]
guest=guest_policy
wifi=wifi_policy</literallayout>
<simpara>A node who is register like a guest will be scanned by the guest_policy , etc &#8230;</simpara>
<simpara>Using OpenVAS:</simpara>
<literallayout class="monospaced">[scan]
engine=openvas
host=127.0.0.1
openvas_configid=openvasScanConfigId
openvas_reportformatid=openvasNBEReportFormatId
pass=openvasUserPassword
registration=enabled
user=openvasUsername</literallayout>
</section>
<section id="_violations_conf">
<title>violations.conf</title>
<simpara>You need to create a new violation section and have to specify:</simpara>
<simpara>Using Nessus:</simpara>
<literallayout class="monospaced">trigger=Nessus::&lt;violationId&gt;</literallayout>
<simpara>Using OpenVAS:</simpara>
<literallayout class="monospaced">trigger=OpenVAS::&lt;violationId&gt;</literallayout>
<simpara>Where <literal>violationId</literal> is either the ID of the Nessus plugin or the OID of the OpenVAS plugin to check for. Once you have finished the configuration, you need to reload the violation related database contents using:</simpara>
<literallayout class="monospaced">$ pfcmd reload violations</literallayout>
<note><simpara>Violations will trigger if the plugin is higher than a low severity vulnerability.</simpara></note>
</section>
</section>
<section id="_scan_on_registration">
<title>Scan on registration</title>
<simpara>To perform a system scan before giving access to a host on the network you need to enable the <literal>scan.registration</literal> parameter in <literal>pf.conf</literal>.
If you want to scan a device that have been auto-registered as a 802.1X connection, you need to enable <literal>scan.dot1x</literal> parameter in <literal>pf.conf</literal>.
The default EAP-Type that will be scanned is MS-CHAP-V2 but you can configure other EAP-Type (such as MD5-Challenge) by adding them to <literal>scan.dot1x_type</literal> as a comma-separated list of values (look at <literal>dictionary.freeradius.internal</literal> file bundled with FreeRADIUS for the list of EAP-Type).</simpara>
<simpara>It is also recommended to adjust <literal>scan.duration</literal> to reflect how long the scan takes. A progress bar of this duration will be shown to the user while he is waiting. By default, we set this variable to 60s.</simpara>
</section>
<section id="_hosting_nessus_openvas_remotely">
<title>Hosting Nessus / OpenVAS remotely</title>
<simpara>Because of the CPU intensive nature of an automated vulnerability assessment, we recommend that it is hosted on a separate server for large environments. To do so, a couple of things are required:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
PacketFence needs to be able to communicate to the server on the port specified by the vulnerability engine used
</simpara>
</listitem>
<listitem>
<simpara>
The scanning server need to be able to access the targets. In other words, registration VLAN access is required if scan on registration is enabled.
</simpara>
</listitem>
</itemizedlist>
<simpara>If you are using the OpenVAS scanning engine:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
The scanning server need to be able to reach PacketFence&#8217;s Admin interface (on port 1443 by default) by its DNS entry. Otherwise PacketFence won&#8217;t be notified of completed scans.
</simpara>
</listitem>
<listitem>
<simpara>
You must have a valid SSL certificate on your PacketFence server
</simpara>
</listitem>
</itemizedlist>
<simpara>If you are using the Nessus scanning engine:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
You just have to change the host value by the Nessus server IP.
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
<section id="_radius_accounting">
<title>RADIUS Accounting</title>
<simpara>RADIUS Accounting is usually used by ISPs to bill clients.  In PacketFence, we are able to use this information to determine if the node is still connected, how much time it has been connected, and how much bandwitdh the user consumed.</simpara>
<section id="_violations_2">
<title>Violations</title>
<simpara>Using PacketFence, it is possible to add violations to limit bandwidth abuse.  The format of the trigger is very simple:</simpara>
<literallayout class="monospaced">Accounting::[DIRECTION][LIMIT][INTERVAL(optional)]</literallayout>
<simpara>Let&#8217;s explain each chunk properly:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
<literal>DIRECTION</literal>: You can either set a limit to inbound(IN), outbound(OUT), or total(TOT) bandwidth
</simpara>
</listitem>
<listitem>
<simpara>
<literal>LIMIT</literal>: You can set a number of bytes(B), kilobytes(KB), megabytes(MB), gigabytes(GB), or petabytes(PB)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>INTERVAL</literal>: This is actually the time window we will look for potential abuse.  You can set a number of days(D), weeks(W), months(M), or years(Y).
</simpara>
</listitem>
</itemizedlist>
<section id="_example_triggers">
<title>Example triggers</title>
<itemizedlist>
<listitem>
<simpara>
Look for Incoming (Download) traffic with a 50GB/month
</simpara>
<literallayout class="monospaced">Accounting::IN50GB1M</literallayout>
</listitem>
<listitem>
<simpara>
Look for Outgoing (Upload) traffic with a 500MB/day
</simpara>
<literallayout class="monospaced">Accounting::OUT500MB1D</literallayout>
</listitem>
<listitem>
<simpara>
Look for Total (Download + Upload) traffic with a 200GB limit in the last week
</simpara>
<literallayout class="monospaced">Accounting::TOT200GB1W</literallayout>
</listitem>
</itemizedlist>
</section>
<section id="_grace_period">
<title>Grace period</title>
<simpara>When using such violation feature, setting the grace period is really important.  You don&#8217;t want to put it too low (ie. A user re-enable his network, and get caught after 1 bytes is tranmitted!) or too high.  We recommend that you set the grace period to one interval window.</simpara>
</section>
</section>
</section>
<section id="_oinkmaster">
<title>Oinkmaster</title>
<simpara>Oinkmaster is a perl script that enables the possibility to update the different snort rules very easily. It is simple to use, and install. This section will show you how to implement Oinkmaster to work with PacketFence and Snort.</simpara>
<simpara>Please visit <ulink url="http://oinkmaster.sourceforge.net/download.shtml">http://oinkmaster.sourceforge.net/download.shtml</ulink> to download oinkmaster. A sample oinkmaster configuration file is provided at <literal>/usr/local/pf/addons/snort/oinkmaster.conf</literal>.</simpara>
<section id="_configuration_5">
<title>Configuration</title>
<simpara>Here are the steps to make Oinkmaster work. We will assume that you already downloaded the newest oinkmaster archive:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>
Untar the freshly downloaded Oinkmaster
</simpara>
</listitem>
<listitem>
<simpara>
Copy the required perl scripts into <literal>/usr/local/pf/oinkmaster</literal>. You need to copy over <literal>contrib</literal> and <literal>oinkmaster.pl</literal>
</simpara>
</listitem>
<listitem>
<simpara>
Copy the <literal>oinkmaster.conf</literal> provided by PacketFence (see the section above) in <literal>/usr/local/pf/conf</literal>
</simpara>
</listitem>
<listitem>
<simpara>
Modify the configuration to suit your own needs. Currently, the configuration file is set to fetch the bleeding rules.
</simpara>
</listitem>
</orderedlist>
</section>
<section id="_rules_update">
<title>Rules update</title>
<simpara>In order to get periodic updates for PacketFence Snort rules, we simply need to create a <literal>crontab</literal> entry with the right information. The example below shows a <literal>crontab</literal> entry to fetch the updates daily at 23:00 PM:</simpara>
<literallayout class="monospaced">0 23 * * * (cd /usr/local/pf; perl oinkmaster/oinkmaster.pl -C conf/oinkmaster.conf -o conf/snort/)</literallayout>
</section>
</section>
<section id="_floating_network_devices">
<title>Floating Network Devices</title>
<simpara>Starting with version 1.9, PacketFence now supports floating network devices. A Floating network device is a device for which PacketFence has a different behaviour compared to a regular device. This functionality was originally added to support mobile Access Points.</simpara>
<caution><simpara>Right now PacketFence only supports floating network devices on Cisco and Nortel switches configured with port-security.</simpara></caution>
<simpara>For a regular device, PacketFence put it in the VLAN corresponding to its status (Registration, Quarantine or Regular Vlan) and authorizes it on the port (port-security).</simpara>
<simpara>A floating network device is a device that PacketFence does not manage as a regular device.</simpara>
<simpara>When a floating network device is plugged, PacketFence will let/allow all the MAC addresses that will be connected to this device (or appear on the port) and if necessary, configure the port as multi-vlan (trunk) and set PVID and tagged VLANs on the port.</simpara>
<simpara>When an floating network device is unplugged, PacketFence will reconfigure the port like before it was plugged.</simpara>
<section id="_here_is_how_it_works">
<title>Here is how it works:</title>
<simpara>Configuration</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
floating network devices have to be identified using their MAC address.
</simpara>
</listitem>
<listitem>
<simpara>
linkup/linkdown traps are not enabled on the switches, only port-security traps are.
</simpara>
</listitem>
</itemizedlist>
<simpara>When PacketFence receives a port-security trap for a floating network device, it changes the port configuration so that:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
it disables port-security
</simpara>
</listitem>
<listitem>
<simpara>
it sets the PVID
</simpara>
</listitem>
<listitem>
<simpara>
it eventually sets the port as multi-vlan (trunk) and sets the tagged Vlans
</simpara>
</listitem>
<listitem>
<simpara>
it enables linkdown traps
</simpara>
</listitem>
</itemizedlist>
<simpara>When PF receives a linkdown trap on a port in which a floating network device was plugged, it changes the port configuration so that:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
it enables port-security
</simpara>
</listitem>
<listitem>
<simpara>
it disables linkdown traps
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_identification">
<title>Identification</title>
<simpara>As we mentioned earlier, each floating network device has to be identified. There are two ways to do it:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
by editing <literal>conf/floating_network_device.conf</literal>
</simpara>
</listitem>
<listitem>
<simpara>
through the Web GUI, in <emphasis role="strong">Configuration &#8594; Network &#8594; Floating devices</emphasis>
</simpara>
</listitem>
</itemizedlist>
<simpara>Here are the settings that are available:</simpara>
<variablelist>
<varlistentry>
<term>
MAC Address
</term>
<listitem>
<simpara>
  MAC address of the floating device
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
IP Address
</term>
<listitem>
<simpara>
  IP address of the floating device (not required, for information only)
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
trunkPort
</term>
<listitem>
<simpara>
  Yes/no. Should the port be configured as a muti-vlan port?
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
pvid
</term>
<listitem>
<simpara>
  VLAN in which PacketFence should put the port
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
taggedVlan
</term>
<listitem>
<simpara>
  Comma separated list of VLANs. If the port is a multi-vlan, these are the Vlans that have to be tagged on the port.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</section>
</section>
<section id="_guests_management">
<title>Guests Management</title>
<simpara>PacketFence supports the ability to manage guests by establishing expire dates and assign different roles which will permit different accesses to the network resources.</simpara>
<simpara>Guests can self-register themselves using an activation code sent to their mobile phone or they can use their email address and receive and activation link to activate their network access.</simpara>
<simpara>PacketFence has the option to have guests sponsored their access by local staff. Once a guest requests a sponsored access an email is sent to the sponsor and the sponsor must click on a link and authenticate in order to enable his access.</simpara>
<simpara>Moreover, PacketFence also has the option for guests to request their access in advance. Confirmation by email and by a sponsor are the two pre-registration techniques supported at this point.</simpara>
<simpara>Guests can also be created using a separate web interface. This interface allow PacketFence administrators or guests managers to create single accounts, multiple accounts using a prefix (ie.: guest1, guest2, guest3&#8230;) or import data from a CSV to create accounts. Access duration and expected arrival date are also customizable.</simpara>
<section id="_usage">
<title>Usage</title>
<section id="_guest_self_registration">
<title>Guest self-registration</title>
<simpara>Self-registration is enabled by default. It is part of the captive portal profile and can be accessed on the registration page by clicking the <emphasis role="strong">Sign up</emphasis> link.</simpara>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="docs/images/screenshot-captive-portal.png"/>
  </imageobject>
  <textobject><phrase>Captive portal screenshot</phrase></textobject>
</mediaobject>
</informalfigure>
</section>
<section id="_managed_guests">
<title>Managed guests</title>
<simpara>Part of the web administration interface, the guests management interface is enabled by default. It is accessible through the <emphasis role="strong">Configuration &#8594; Users &#8594; Create</emphasis> menu.</simpara>
</section>
<section id="_guest_pre_registration">
<title>Guest pre-registration</title>
<simpara>Pre-registration is disabled by default. Once enabled, PacketFence&#8217;s firewall and Apache ACLs allow access to the <literal>/signup</literal> page on the portal even from a remote location. All that should be required from the administrators is to open up their perimeter firewall to allow access to PacketFence&#8217;s management interface IP on port 443 and make sure a domain name to reach said IP is configured (and that the SSL cert matches it). Then you can promote the pre-registration link from your extranet web site: <ulink url="https://&lt;hostname&gt;/signup">https://&lt;hostname&gt;/signup</ulink>.</simpara>
<caution><simpara>Pre-registration increases the attack surface of the PacketFence system since a subset of it&#8217;s functionnality is exposed on the Internet. Make sure you understand the risks, apply the critical operating system updates and apply PacketFence&#8217;s security fixes.</simpara></caution>
</section>
</section>
<section id="_configuration_6">
<title>Configuration</title>
<section id="_guest_self_registration_2">
<title>Guest self-registration</title>
<simpara>It is possible to modify the default values of the guest self-registration feature by editing <literal>/usr/local/pf/conf/pf.conf</literal>.</simpara>
<simpara>Default values are located in <literal>/usr/local/pf/conf/pf.conf.defaults</literal> and documentation for every settings is available in <literal>/usr/local/pf/conf/documentation.conf</literal>.</simpara>
<literallayout class="monospaced">[guests_self_registration]
mandatory_fields=firstname,lastname,phone,email
guest_pid=email
preregistration=disabled
sponsorship_cc=</literallayout>
<simpara>These parameters can also be configured from the <emphasis role="strong">Configuration &#8594; Self Registration</emphasis> section of the Web admin interface.</simpara>
<simpara>Available registration modes are defined on a per-portal-profile basis. These are configurable from <emphasis role="strong">Configuration &#8594; Portal Profiles and Pages</emphasis>. To disable the self-registration feature, simply remove all self-registration sources from the portal profile definition. Notice however that if your default portal profile has no source, it will use all authentication sources.</simpara>
<caution><simpara>A valid MTA configured in PacketFence is needed to correctly relay emails related to the guest module. If <emphasis>localhost</emphasis> is used as smtpserver, make sure that a MTA is installed and configured on the server.</simpara></caution>
<simpara>Self-registered guests are added under the persons tab of the PacketFence Web administration interface.</simpara>
</section>
<section id="_managed_guests_2">
<title>Managed guests</title>
<simpara>It is possible to modify the default values of the guests created from the Web admin interface by editing <literal>/usr/local/pf/conf/pf.conf</literal>.</simpara>
<simpara>Default values are located in <literal>/usr/local/pf/conf/pf.conf.defaults</literal> and documentation for every settings is available in <literal>/usr/local/pf/conf/documentations.conf</literal>.</simpara>
<literallayout class="monospaced">[guests_admin_registration]
access_duration_choices=1h,3h,12h,1D,2D,3D,5D
default_access_duration=12h</literallayout>
<simpara>The format of the duration is as follow:</simpara>
<literallayout class="monospaced">&lt;DURATION&gt;&lt;DATETIME_UNIT&gt;[&lt;PERIOD_BASE&gt;&lt;OPERATOR&gt;&lt;DURATION&gt;&lt;DATE_UNIT&gt;]</literallayout>
<simpara>Let&#8217;s explain the meaning of each parameter:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
<literal>DURATION</literal>: a number corresponding to the period duration.
</simpara>
</listitem>
<listitem>
<simpara>
<literal>DATETIME_UNIT</literal>: a character corresponding to the units of the date or time duration; either s (seconds), m (minutes), h (hours), D (days), W (weeks), M (months), or Y (years).
</simpara>
</listitem>
<listitem>
<simpara>
<literal>PERIOD_BASE</literal>: either F (fixed) or R (relative). A relative period is computed from the beginning of the period unit. Weeks start on Monday.
</simpara>
</listitem>
<listitem>
<simpara>
<literal>OPERATOR</literal>: either + or -. The duration following the operator is added or subtracted from the base duration.
</simpara>
</listitem>
<listitem>
<simpara>
<literal>DATE_UNIT</literal>: a character corresponding to the units of the extended duration. Limited to date units (D (days), W (weeks), M (months), or Y (years)).
</simpara>
</listitem>
</itemizedlist>
<simpara>These parameters can also be configured from the <emphasis role="strong">Configuration &#8594; Admin Registration</emphasis> section of the Web admin interface.</simpara>
<caution><simpara>A valid MTA configured in PacketFence is needed to correctly relay emails related to the guest module. If <emphasis>localhost</emphasis> is used as smtpserver, make sure that a MTA is installed and configured on the server.</simpara></caution>
<simpara>From the Users page of the PacketFence Web admin interface, it is possible to set the access duration of users, change their password and more.</simpara>
</section>
<section id="_guest_pre_registration_2">
<title>Guest pre-registration</title>
<simpara>To minimally configure guest pre-registration, you must make sure that the following statement is set under <literal>[guests_self_registration]</literal> in <literal>/usr/local/pf/conf/pf.conf</literal>:</simpara>
<literallayout class="monospaced">[guests_self_registration]
preregistration=enabled</literallayout>
<simpara>This parameter can also be configured from the <emphasis role="strong">Configuration &#8594; Self Registration</emphasis> section.</simpara>
<simpara>Finally, it is advised that you read the whole guest self-registration section since pre-registration is simply a twist of the self-registration process.</simpara>
<caution><simpara>A valid MTA configured in PacketFence is needed to correctly relay emails related to the guest module. If <emphasis>localhost</emphasis> is used as smtpserver, make sure that a MTA is installed and configured on the server.</simpara></caution>
</section>
</section>
</section>
<section id="_statement_of_health_soh">
<title>Statement of Health (SoH)</title>
<simpara>The Statement of Health (SoH) is product that has been developed by Microsoft. In the Microsoft world, this is named Network Access Protection or NAP. On Windows versions from XP SP2 to Windows 7, there is a NAP service installed that can relay health information (Anti-Virus update status, Windows Update status, etc) to a RADIUS Server or a DHCP server. The section below explains you how to do SoH policies with PacketFence.</simpara>
<section id="_installation_5">
<title>Installation</title>
<simpara>By default, we turn SoH off. To enable its support, simply uncomment the following lines in <literal>/usr/local/pf/conf/radiusd/eap.conf</literal>.</simpara>
<literallayout class="monospaced">soh=yes
soh-virtual-server = "soh-server"</literallayout>
<simpara>Restart the RADIUS service afterward.</simpara>
<simpara>On the client side, to enable SoH for EAP, do the following (Windows 7 example):</simpara>
<screen>sc config napagent start=auto
sc start napagent

:: Wired 802.1X
sc config dot3svc start=auto depend=napagent
sc start dot3svc

netsh nap client show config

:: get the "ID" value for the "EAP Quarantine Enforcement Client"
netsh nap client set enforce id=$ID admin=enable</screen>
<simpara>The last step is to select the "Enforce Network Access Protection" checkbox under the EAP profile settings. Those steps can be easily configured using GPOs.</simpara>
</section>
<section id="_configuration_of_soh_policy">
<title>Configuration of SoH policy</title>
<simpara>In order to enforce a SoH policy, we need to create it first. This is done using the <emphasis role="strong">Configuration &#8594; Compliance &#8594; Statement of Health</emphasis> module.</simpara>
</section>
<section id="_policy_example">
<title>Policy example</title>
<simpara>Let&#8217;s walk through an example situation. Suppose you want to display a remediation page to clients that do not have an anti-virus enabled.</simpara>
<simpara>The three broad steps are: create a violation class for the condition, then create an SoH filter to trigger the violation when "anti-virus is disabled", and finally, reload the violations.</simpara>
<simpara>First, create the proper violation either via the Admin UI, or by editing the <literal>conf/violations.conf</literal> files:</simpara>
<literallayout class="monospaced">[4000001]
desc=No anti-virus enabled
url=/remediation.php?template=noantivirus
actions=trap,email,log
enabled=Y</literallayout>
<note><simpara>You may also want to set other attributes such as auto_enable, grace, etc.</simpara></note>
<simpara>When done with the violation, visit the Web Administration under <emphasis role="strong">Configuration &#8594; Compliance &#8594; Statement of Health</emphasis> and (edit the filter named <emphasis role="strong">Default</emphasis>, or) use the <emphasis role="strong">Add a filter</emphasis> button to create a filter named <emphasis role="strong">antivirus</emphasis>. Click on <emphasis role="strong">antivirus</emphasis> in the filter list, and select <emphasis role="strong">Trigger violation</emphasis> in the action drop-down. Enter the vid of the violation you created above in the input box that appears.</simpara>
<simpara>Next, click on <emphasis role="strong">Add a condition</emphasis>, and select <emphasis role="strong">Anti-virus</emphasis>, <emphasis role="strong">is</emphasis>, and <emphasis role="strong">disabled</emphasis> in the drop-down boxes that appear. Click on the <emphasis role="strong">Save filters</emphasis> button. Finally, reload the violations either by restarting PacketFence or using the <literal>pfcmd reload violations</literal> command.</simpara>
<simpara>The last step is to create a new remediation template called <literal>noantivirus.php</literal> on the filesystem in the <literal>html/captive-portal/violations</literal> folder. Edit it to include the text you want to display to the users.</simpara>
<simpara>Apple and Android Wireless Profile Provisioning</simpara>
<screen>Apple devices such as iPhones, iPads, iPods and Mac OS X (10.7+) support wireless profile importation using a special XML file format (mobileconfig). Android is also able to support this feature by importing the wireless profile with the Android PacketFence Agent. In fact, installing such file on your Apple device will automatically configure the wireless settings for a given SSID. This feature is often used when the SSID is hidden, and you want to ease the configuration steps on the mobile device (because it is often painful to configure manually). In PacketFence, we are going further, we generate the profile according to the administrator's preference and we pre-populate the file with the user's credentials (without the password). The user simply needs to install its generated file and he will be able to use the new SSID.

Configure the feature
^^^^^^^^^^^^^^^^^^^^^

In order to enable this feature, you simply need to add 3 options to your `pf.conf` configuration file.

provisioning.autoconfig:: Enable or disable the feature
provisioning.ssid:: This is the SSID you want the user to connect to upon registration
provisioning.category:: Activate this feature to a specific category or any.

Here is an example: We have an hidden WPA2-Enterprise SSID named HiddenSecure, and we want to provision this wireless profile to everybody registering with an iPhone, iPad, or iPod. The configuration in `pf.conf` would look like:

  [provisioning]
  autoconfig=enabled
  ssid=HiddenSecure
  category=any

Alternatively, you can configure these parameters from the PacketFence Web administrative GUI, in the *Configuration -> Provisioning* section.

For Android, you must allow passthrough in your configuration like this:

  [trapping]
  passthrough=enabled
  passthroughs=*.ggpht.com,*.googleusercontent.com,android.clients.google.com,*.googleapis.com,*.android.clients.google.com

Profile generation
^^^^^^^^^^^^^^^^^^

Upon registration, instead of showing the default release page, the user will be showing another version of the page saying that the wireless profile has been generated with a clickable link on it. To install the profile, Apple user owner simply need to click on that link, and follow the instructions on their device. Android user owner simply click to the link and will be forwarded to Google Play to install PacketFence agent. Simply launch the application and click to configure will create the secure SSID profile. It is that simple.

SNMP Traps Limit</screen>
<simpara>PacketFence mainly rely on SNMP traps to communicate with equipment. Due to the fact that traps coming in from approved (configured) devices are all processed by the daemon, it is possible for someone who want to generate a certain load on the PacketFence server to force the generation of non-legitimate SNMP traps or a switch can randomly generate a high quantity of traps sent to PacketFence for an unknown reason.</simpara>
<simpara>Because of that, it is possible to limit the number of SNMP traps coming in from a single switch port and take action if that limit is reached. For example, if over 100 traps are received by PacketFence from the same switch port in a minute, the switch port will be shut and a notification email will be sent.</simpara>
<simpara>Here&#8217;s the default config for the SNMP traps limit feature. As you can see, by default, PacketFence will log the abnormal activity after 100 traps from the same switch port in a minute. These configurations are in the <literal>conf/pf.conf</literal> file:</simpara>
<literallayout class="monospaced">[vlan]
trap_limit = enabled
trap_limit_threshold = 100
trap_limit_action =</literallayout>
<simpara>Alternatively, you can configure these parameters from the PacketFence Web administrative GUI, in the <emphasis role="strong">Configuration &#8594; SNMP</emphasis> section.</simpara>
</section>
</section>
<section id="_billing_engine">
<title>Billing Engine</title>
<simpara>PacketFence integrates the ability to use a payment gateway to bill users to gain access to the network. When configured, the user who wants to access the network / Internet is prompted by a page asking for it&#8217;s personnal information as well as it&#8217;s credit card information.</simpara>
<simpara>At this moment there is only one payment gateway built into PacketFence: Authorize.net.</simpara>
<simpara>The configuration to use the feature is fairly simple. The general configuration to enable / disable the billing engine can be done through the Web administration GUI (<emphasis role="strong">Configuration &#8594; Portal Profiles and Pages</emphasis>) or from the <literal>conf/profiles.conf</literal> file:</simpara>
<literallayout class="monospaced">[default]
billing_engine = enabled
...</literallayout>
<simpara>Billing engine parameters are specified in <literal>conf/pf.conf</literal> or from <emphasis role="strong">Configuration &#8594; Billing</emphasis>:</simpara>
<literallayout class="monospaced">[billing]
gateway = authorize_net
authorizenet_posturl = The payment gateway processing URL
authorizenet_login = The merchant's unique API Login ID
authorizenet_trankey = The merchant's unique Transaction Key</literallayout>
<simpara>It is also possible to configure multiple network access with different prices.
For example, you may want to provide basic Internet access with a decent speed at a specific price and another package with high speed connection at another price.</simpara>
<simpara>To do so, some customizations is needed to the billing module. You&#8217;ll need to redefined the <literal>getAvailableTiers</literal> method in the <literal>lib/pf/billing/custom.pm</literal> file. An example is already in place in the file.</simpara>
<simpara>To assign a role by tiers (example: slow, medium and fast), edit the file <literal>lib/pf/billing/custom.pm</literal></simpara>
<literallayout class="monospaced">my %tiers = (
        tier1 =&gt; {
            id =&gt; "tier1",
            name =&gt; "Tier 1",
            price =&gt; "1.00",
            timeout =&gt; "7D",
            usage_duration =&gt; '1D',
            category =&gt; '',
            description =&gt; "Tier 1 Internet Access", destination_url =&gt; "http://www.packetfence.org"
        },
);</literallayout>
<simpara><emphasis role="strong">id</emphasis> is used as the item value of the billing table.</simpara>
<simpara><emphasis role="strong">name</emphasis> is the name of the tier used on billing.html.</simpara>
<simpara><emphasis role="strong">price</emphasis> is amount charged on the credit card.</simpara>
<simpara><emphasis role="strong">timeout</emphasis> is used to compute the unregistration date of the node.</simpara>
<simpara><emphasis role="strong">usage_duration</emphasis> is the amount of non-contignuous access time for the node, set as the time_balance value of the node table.</simpara>
<simpara><emphasis role="strong">category</emphasis> is the role in which to put the node.</simpara>
<simpara><emphasis role="strong">description will</emphasis> appear on the billing.html.</simpara>
<simpara><emphasis role="strong">destination_url</emphasis> is the url that the device will be redirected after a successful authentication.</simpara>
<caution><simpara>The use of different billing tiers requires different roles in PacketFence. Make sure to create these roles first otherwise you will run into problems.</simpara></caution>
</section>
<section id="_portal_profiles">
<title>Portal Profiles</title>
<simpara>In some cases, you may want to present a different captive portal (see below for the available customizations) according to the SSID, the VLAN, or the switch IP the client connects to. To do so, PacketFence has the concept of portal profiles which gives you this possibility.</simpara>
<simpara>When configured, portal profiles will override default values for which it is configured. When no values are configured in the profile, PacketFence will take its default ones (according to the "default" portal profile).</simpara>
<simpara>Here are the different configuration parameters that can be set for each portal profiles. The only mandatory parameter is "filter", otherwise, PacketFence won&#8217;t be able to correctly apply the portal profile. The parameters must be set in conf/profiles.conf:</simpara>
<literallayout class="monospaced">[profilename1]
description = the description of your portal profile
filter = the name of the SSID for which you'd like to apply the profile, or the VLAN number
billing_engine = either enabled or disabled
sources = comma-separated list of authentications sources (IDs) to use</literallayout>
<simpara>Portal profiles should be managed from PacketFence&#8217;s Web administrative GUI - from the <emphasis role="strong">Configuration &#8594; Portal Profiles and Pages</emphasis> section. Adding a portal profile from that interface will correctly copy templates over - which can then be modified as you wish.</simpara>
</section>
<section id="_oauth2_authentication">
<title>OAuth2 Authentication</title>
<simpara>The captive portal of PacketFence allows a guest/user to register using his Google, Facebook or Github account.</simpara>
<simpara>For each providers, we maintain an allowed domain list to punch holes into the firewall so the user can hit the provider login page.
This list is available in each OAuth2 authentication source.</simpara>
<simpara>In order to have oauth2 working properly, you need to enable IP forwarding on your servers. To do it permanently, look in the <literal>/etc/sysctl.conf</literal>, and set the following line:</simpara>
<literallayout class="monospaced"># Controls IP packet forwarding
net.ipv4.ip_forward = 1</literallayout>
<simpara>Save the file, and issue a <literal>sysctl -p</literal> to update the OS config.</simpara>
<section id="_google">
<title>Google</title>
<simpara>In order to use Google as a OAuth2 provider, you need to get an API key to access their services.  Sign up here : <ulink url="http://code.google.com/apis/console">http://code.google.com/apis/console</ulink>.  Make sure you use this URI for the "Redirect URI"
field : <ulink url="https://YOUR_PORTAL_HOSTNAME/oauth2/google">https://YOUR_PORTAL_HOSTNAME/oauth2/google</ulink>.  Of course, replace the hostname with the values from <literal>general.hostname</literal> and <literal>general.domain</literal>.</simpara>
<simpara>You can keep the default configuration, modify the App ID &amp; App Secret (Given by Google on the developper plateform) and Portal URL (<ulink url="https://YOUR_PORTAL_HOSTNAME/oauth2/facebook">https://YOUR_PORTAL_HOSTNAME/oauth2/facebook</ulink>).</simpara>
<simpara>Also, add the following Authorized domains : *.google.com, *.google.ca, *.google.fr, *.gstatic.com,googleapis.com,accounts.youtube.com (Make sure that you have the google domain from your country like Canada &#8658; *.google.ca, France &#8658; *.google.fr, etc&#8230;)</simpara>
<simpara>Once you have your client id, and API key, you need to configure the OAuth2 provider. This can be done by adding a Google OAuth2 authentication source from <emphasis role="strong">Configuration &#8594; Sources</emphasis>.</simpara>
<simpara>Moreover, don&#8217;t forget to add Google as a registration mode from your portal profile definition, available from <emphasis role="strong">Configuration &#8594; Portal Profiles and Pages</emphasis>.</simpara>
</section>
<section id="_facebook">
<title>Facebook</title>
<simpara>To use Facebook, you also need an API code and a secret key.  To get one, go here: <ulink url="https://developers.facebook.com/apps">https://developers.facebook.com/apps</ulink>.  When you create your App, make sure you input the following as the Website URL:
<ulink url="https://YOUR_PORTAL_HOSTNAME/oauth2/facebook">https://YOUR_PORTAL_HOSTNAME/oauth2/facebook</ulink></simpara>
<simpara>Of course, replace the hostname with the values from <literal>general.hostname</literal> and <literal>general.domain</literal>.</simpara>
<simpara>You can keep the default configuration, modify the App ID &amp; App Secret (Given by FaceBook on the developper plateform) and Portal URL (<ulink url="https://YOUR_PORTAL_HOSTNAME/oauth2/facebook">https://YOUR_PORTAL_HOSTNAME/oauth2/facebook</ulink>).</simpara>
<simpara>Also, add the following Authorized domains : *.facebook.com, *.fbcdn.net, *.akamaihd.net (May change)</simpara>
<simpara>Once you have your information, you need to configure the OAuth2 provider. This can be done by adding a Facebook OAuth2 authentication source from <emphasis role="strong">Configuration &#8594; Sources</emphasis>.</simpara>
<simpara>Moreover, don&#8217;t forget to add Facebook as a registration mode from your portal profile definition, available from <emphasis role="strong">Configuration &#8594; Portal Profiles and Pages</emphasis>.</simpara>
<caution><simpara>By allowing OAuth through Facebook, you will give Facebook access to the users while they are sitting in the registration VLAN.</simpara></caution>
</section>
<section id="_github">
<title>GitHub</title>
<simpara>To use GitHub, you also need an API code and a secret key.  To get one, you need to create an App here: <ulink url="https://github.com/settings/applications">https://github.com/settings/applications</ulink>.  When you create your App, make sure you input the following as the Callback URL
<ulink url="https://YOUR_PORTAL_HOSTNAME/oauth2/github">https://YOUR_PORTAL_HOSTNAME/oauth2/github</ulink></simpara>
<simpara>Of course, replace the hostname with the values from <literal>general.hostname</literal> and <literal>general.domain</literal>.</simpara>
<simpara>Once you have your information, Once you have your information, you need to configure the OAuth2 provider. This can be done by adding a GitHub OAuth2 authentication source from <emphasis role="strong">Configuration &#8594; Sources</emphasis>.</simpara>
<simpara>Moreover, don&#8217;t forget to add GitHub as a registration mode from your portal profile definition, available from <emphasis role="strong">Configuration &#8594; Portal Profiles and Pages</emphasis>.</simpara>
</section>
</section>
<section id="_gaming_devices_registration">
<title>Gaming Devices Registration</title>
<simpara>Users have the possibility to register gaming devices (Microsoft XBOX/XBOX360, Nintendo DS/Wii, Sony PlayStation and so on) right from a special portal page. When accessing this page, users will be prompted to login as if they were registering themselves. Once logged in, the portal will ask them to enter the gaming device MAC address that will then be matched against a predefined list of authorized MAC OUI. The gaming device will be registered with the user&#8217;s id and can be assigned into a specific category for easier management.</simpara>
<simpara>Here&#8217;s how to configure the whole thing.
The portal page can be accessed by the following URL: <ulink url="https://YOUR_PORTAL_HOSTNAME/gaming-registration">https://YOUR_PORTAL_HOSTNAME/gaming-registration</ulink>
This URL is accessible from within the network, in any VLAN that can reach the PacketFence server.</simpara>
<simpara>The following can be configured by editing the pf.conf file:</simpara>
<literallayout class="monospaced">[registration]
gaming_devices_registration = enabled
gaming_devices_registration_role = gaming</literallayout>
<simpara>Make sure the role exists in PacketFence otherwise you will encounter registration errors. Moreover, make sure the role mapping for your particular equipment is done.</simpara>
<simpara>These parameters can also be configured from the <emphasis role="strong">Configuration &#8594; Registration</emphasis> section.</simpara>
</section>
<section id="_eduroam">
<title>Eduroam</title>
<blockquote>
<attribution>
eduroam
<citetitle>https://www.eduroam.org/</citetitle>
</attribution>
<simpara>eduroam (education roaming) is the secure, world-wide roaming access service developed for the international research and education community.</simpara>
<simpara>eduroam allows students, researchers and staff from participating institutions to obtain Internet connectivity across campus and when visiting other participating institutions by simply opening their laptop.</simpara>
</blockquote>
<simpara>PacketFence supports integration with eduroam and allows participating institutions to authenticate both locally visiting users from other institutions as well as allowing other institutions to authenticate local users.</simpara>
<simpara>In order for PacketFence to allow eduroam authentication, the FreeRADIUS configuration of PacketFence must be modified to allow the eduroam servers to connect to it as clients as well as to proxy RADIUS authentication requests for users from outside institutions.</simpara>
<simpara>First, modify the /usr/local/pf/raddb/clients.conf file to allow the eduroam servers to connect to your PacketFence server. Add the eduroam servers as clients and make sure to add the proper RADIUS secret. Set a shortname to refer to these clients as you will later need it to exclude them from some parts of the PacketFence configuration.</simpara>
<simpara>clients.conf example:</simpara>
<screen>client tlrs1.eduroam.us {
        secret = useStrongerSecret
        shortname = tlrs1
}

client tlrs2.eduroam.us {
        secret = useStrongerSecret
        shortname = tlrs2
}</screen>
<simpara>Secondly, modify the list of domains and proxy servers in /usr/local/pf/raddb/proxy.conf. You will need to define each of your domains as well as the DEFAULT domain. The DEFAULT realm will apply to any client that attempts to authenticate with a realm that is not otherwise defined in proxy.conf and will be proxied to the eduroam servers.</simpara>
<simpara>Define one or more home servers (servers to which eduroam requests should be proxied).</simpara>
<simpara>proxy.conf example:</simpara>
<literallayout class="monospaced">home_server tlrs1.eduroam.us {
        type = auth
        ipaddr = 257.128.1.1
        port = 1812
        secret = useStrongerSecret
        require_message_authenticator = yes
}</literallayout>
<simpara>Define a pool of servers to group your eduroam home servers together.</simpara>
<simpara>proxy.conf example:</simpara>
<literallayout class="monospaced">home_server_pool eduroam {
        type = fail-over
        home_server = tlrs1.eduroam.us
        home_server = tlrs2.eduroam.us
}</literallayout>
<simpara>Define realms to select which requests should be proxied to the eduroam server pool.
There should be one realm for each of your domains, and possibly one more per domain if
you intend to allow usernames of the DOMAIN\user form.</simpara>
<simpara>The REALM is set based on the domain found by the suffix or ntdomain modules
( see raddb/modules/realm ).
The suffix or ntdomain modules try to find a domain either with an @domain or suffix\username.</simpara>
<itemizedlist>
<listitem>
<simpara>
If none is found, the REALM is NULL.
</simpara>
</listitem>
<listitem>
<simpara>
If a domain is found, FreeRADIUS tries to match one of the REALMS defined in this file.
</simpara>
</listitem>
<listitem>
<simpara>
If the domain is either example.edu or EXAMPLE FreeRADIUS sets the corresponding REALM,
i.e. example.edu or EXAMPLE.
</simpara>
</listitem>
<listitem>
<simpara>
If the REALM does not match either (and it isn&#8217;t NULL), that means there was a domain
other than EXAMPLE or example.edu and we assume it is meant to be proxied to eduroam.
FreeRADIUS sets the DEFAULT realm (which is proxied to the eduroam authentication pool).
</simpara>
</listitem>
</itemizedlist>
<simpara>The REALM determines where the request is sent to. If the REALM authenticates locally
the requests are processed entirely by FreeRADIUS. If the REALM sets a different
home server pool, the requests are proxied to the servers defined within that pool.</simpara>
<simpara>proxy.conf example:</simpara>
<screen># This realm is for requests which don't have an explicit realm
# prefix or suffix.  User names like "bob" will match this one.
# No authentication server is defined, thus the authentication is
# done locally.
realm NULL {
}

# This realm is for ntdomain users who might use the domain like
# this "EXAMPLE\username".
# No authentication server is defined, thus the authentication is
# done locally.
realm EXAMPLE {
}

# This realm is for suffix users who use the domain like this:
# "username@example.edu".
# No authentication server is defined, thus the authentication is
# done locally.
realm example.edu {
}

# This realm is for ALL OTHER requests. Meaning in this context,
# eduroam. The auth_pool is set to the eduroam pool and so the
# requests will be proxied.
realm DEFAULT {
    auth_pool  = eduroam
    nostrip
}</screen>
<simpara>Thirdly, you must configure the packetfence FreeRADIUS virtual servers to treat the requests properly.</simpara>
<simpara>In /usr/local/pf/raddb/sites-enabled/packetfence, modify the authorize section like this:</simpara>
<simpara>raddb/sites-enabled/packetfence example:</simpara>
<screen>authorize {
        # pay attention to the order of the modules. It matters.
        ntdomain
        suffix
        preprocess

        # uncomment this section if you want to block eduroam users from
        # you other SSIDs. The attribute name ( Called-Station-Id ) may
        # differ based on your controller
        #if ( Called-Station-Id !~ /eduroam$/i) {
        #    update control {
        #        Proxy-To-Realm := local
        #    }
        #}

        eap {
                ok = return
        }


        files
        expiration
        logintime
        packetfence
}</screen>
<simpara>In /usr/local/pf/raddb/sites-enabled/packetfence-tunnel, modify the post-auth section like this.
If you omit this change the request will be sent to PacketFence where it will be failed since the
eduroam servers are not part of your configured switches.</simpara>
<simpara>raddb/sites-enabled/packetfence-tunnel example:</simpara>
<screen>post-auth {
        exec

        # we skip packetfence when the request is coming from the eduroam servers
        if ( "%{client:shortname}" != "tlrs1" &amp;&amp; \
             "%{client:shortname}" != "tlrs2"    ) {
                packetfence
        }

        Post-Auth-Type REJECT {
                attr_filter.access_reject
        }
}</screen>
<simpara>Finally, make sure that the realms module is configured this way ( see /usr/local/pf/raddb/modules/realm ):</simpara>
<simpara>raddb/modules/realm example:</simpara>
<screen># 'username@realm'
realm suffix {
        format = suffix
        delimiter = "@"
}

#  'domain\user'
realm ntdomain {
        format = prefix
        delimiter = "\\"
        ignore_null = yes
}</screen>
</section>
</chapter>
<chapter id="_operating_system_best_practices">
<title>Operating System Best Practices</title>
<section id="_iptables">
<title>Iptables</title>
<simpara>IPTables is now entirely managed by PacketFence. However, if you need to perform some custom rules, you can modify <literal>conf/iptables.conf</literal> to your own needs. However, the default template should work for most users.</simpara>
</section>
<section id="_log_rotations">
<title>Log Rotations</title>
<simpara>PacketFence can generate a lot of log entries in huge production environments. This is why we recommend to use either <literal>logrotate</literal> or <literal>log4perl</literal> to periodically rotate your logs.</simpara>
</section>
<section id="_logrotate_recommended">
<title>Logrotate (recommended)</title>
<simpara>This is the easiest way to rotate your logs. In fact, a working logrotate script is provided with the PacketFence package. This script is located in <literal>/usr/local/pf/addons</literal>, and it&#8217;s configured to do a weekly log rotation and keeping old logs with compression. Just add it to your existing logrotate cronjobs.</simpara>
</section>
<section id="_log4perl">
<title>Log4perl</title>
<simpara>This log4perl way is a little more complex to achieve, but it is still quite simple. There are 3 packages you need to get from RPMForge:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
perl-Log-Dispatcher
</simpara>
</listitem>
<listitem>
<simpara>
perl-Log-Dispatcher-FileRotate
</simpara>
</listitem>
<listitem>
<simpara>
perl-Date-Manip
</simpara>
</listitem>
</itemizedlist>
<simpara>Once you downloaded those packages, you need to modify the logging configuration file (<literal>conf/log.conf</literal>) with something like the following example. Note that log4perl is almost the same as log4j, so you should be able to find a lot of documentation online.</simpara>
<literallayout class="monospaced">log4perl.appender.LOGFILE=Log::Dispatch::FileRotate
log4perl.appender.LOGFILE.filename=/usr/local/pf/logs/packetfence.log
log4perl.appender.LOGFILE.mode=append
log4perl.appender.LOGFILE.autoflush=1
log4perl.appender.LOGFILE.size=51200000
log4perl.appender.LOGFILE.max=5
log4perl.appender.LOGFILE.layout=PatternLayout
log4perl.appender.LOGFILE.layout.ConversionPattern=%d{MMM dd HH:mm:ss} %X{proc}(%X{tid}) %p: %m (%M)%n</literallayout>
</section>
<section id="_high_availability">
<title>High Availability</title>
<simpara>A high availability setup (active/passive) for PacketFence can be created using two PacketFence servers and the following open source utilities:</simpara>
<variablelist>
<varlistentry>
<term>
Linux-HA (www.linux-ha.org)
</term>
<listitem>
<simpara>
A daemon that provides cluster infrastructure to its clients. Heartbeat would be responsible for starting the PacketFence services, eventually
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
DRBD (www.drbd.org)
</term>
<listitem>
<simpara>
A network based raid-1.
</simpara>
</listitem>
</varlistentry>
</variablelist>
<simpara>Since PacketFence stores most of its information in a MySQL database, the two PacketFence redundant servers need to share this database in a way or another.</simpara>
<simpara>There are different options to share the database between the two PacketFence servers:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
A local MySQL database server on each PacketFence box configured to store its databases on a remote partition (a LUN on a SAN for example)
</simpara>
<caution><simpara>You have to make sure that only one database server is running at each time (don&#8217;t double-mount the partition)</simpara></caution>
</listitem>
<listitem>
<simpara>
A local MySQL database server on each PacketFence box and replication of the database partition using DRBD
</simpara>
</listitem>
<listitem>
<simpara>
A remote MySQL database server with its own high availability setup
</simpara>
</listitem>
</itemizedlist>
<simpara>In this document, we describe the second option that involves DRBD.</simpara>
<simpara>We assume that:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
you are using RedHat Enterprise 5 or CentOS 5.
</simpara>
</listitem>
<listitem>
<simpara>
pf1 is the first PacketFence server
</simpara>
</listitem>
<listitem>
<simpara>
pf2 is the second PacketFence server
</simpara>
</listitem>
<listitem>
<simpara>
PacketFence is properly configured on each server
</simpara>
</listitem>
<listitem>
<simpara>
the DRBD partition is 30G long
</simpara>
</listitem>
<listitem>
<simpara>
we use HeartBeat v1
</simpara>
</listitem>
</itemizedlist>
<section id="_creation_of_the_drbd_partition">
<title>Creation of the DRBD partition</title>
<simpara>During the OS installation, reduce the size of the main partition and create a new one (that will be used for the replicated MySQL database) of 30G. In order to do so, on <literal>VolGroup00</literal>:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
leave at least 30G of drive space for a new partition. <emphasis role="strong">Do not</emphasis> create that partition during the install process, we will do it later.
</simpara>
</listitem>
</itemizedlist>
</section>
<section id="_partitioning">
<title>Partitioning</title>
<simpara>After the install, you need to create the extra partition for drbd. Using fdisk, create you new partition and save the table. You will probably need to reboot your server after this step.</simpara>
</section>
<section id="_drbd_and_linux_ha_installation">
<title>DRBD and Linux-HA Installation</title>
<section id="_centos_6">
<title>CentOS 6</title>
<simpara>Download the drbd-8.3 and drbd-kmdl-*-8.3 RPMs from <ulink url="http://dl.atrpms.net/el6-x86_64/atrpms/stable/">http://dl.atrpms.net/el6-x86_64/atrpms/stable/</ulink> (for 64bit)
or <ulink url="http://dl.atrpms.net/el6-386/atrpms/stable/">http://dl.atrpms.net/el6-386/atrpms/stable/</ulink> (for 32bit).</simpara>
<simpara>Use the following line to install the required packages.</simpara>
<literallayout class="monospaced">yum install ./drbd*.rpm heartbeat heartbeat-pils heartbeat-stonith</literallayout>
</section>
</section>
<section id="_drbd_configuration_and_setup">
<title>DRBD Configuration and setup</title>
<caution><simpara>Initializing, configuring and troubleshooting DRBD is not straight forward! We strongly recommend that you read the online documentation available on DRBD website so you have a better idea about how it works.</simpara></caution>
<simpara>Here we assume the name of the partition is mysql.</simpara>
<simpara>Load the DRBD kernel module:</simpara>
<literallayout class="monospaced">modprobe drbd</literallayout>
<simpara>Edit <literal>/etc/drbd.conf</literal> and put the following content:</simpara>
<screen>global {
    usage-count yes;
}

common {
    protocol C;
}

resource mysql {
  syncer {
    rate 100M;
    al-extents 257;
  }
  startup {
    degr-wfc-timeout 120;    # 2 minutes.
  }
  disk {
    on-io-error   detach;
  }
  device        /dev/drbd0;
  disk          YOUR_PARTITION_DEVICE;
  meta-disk     internal;

  on pf1_server_name {
    address     x.x.x.x:7788;
  }

  on pf2_server_name {
    address     y.y.y.y:7788;
  }
}</screen>
<simpara>where:</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
<literal>mysql</literal> is the name of the partition you created when installing the OS
</simpara>
</listitem>
<listitem>
<simpara>
<literal>pf1_server_name</literal> and <literal>pf2_server_name</literal> by the real server names
</simpara>
</listitem>
<listitem>
<simpara>
<literal>x.x.x.x</literal> and <literal>y.y.y.y</literal> by the IP addresses dedicated to DRBD on each server (use a dedicated NIC for this, not the main one with all the IPs)
</simpara>
</listitem>
<listitem>
<simpara>
<literal>YOUR_PARTITION_DEVICE</literal> is the device to use for the MySQL partition (ie. <literal>/dev/sda2</literal>)
</simpara>
</listitem>
</itemizedlist>
<simpara>Then initialize the partition:</simpara>
<literallayout class="monospaced">[root@pf1 ~]# drbdadm create-md mysql
Writing meta data...
initializing activity log
NOT initialized bitmap
New drbd meta data block successfully created.
success</literallayout>
<simpara>Start DRBD on both servers:</simpara>
<literallayout class="monospaced"># /etc/init.d/drbd start</literallayout>
<simpara>Make sure you see something like this in <literal>/proc/drbd</literal>:</simpara>
<literallayout class="monospaced">...
 0: cs:Connected ro:Secondary/Secondary ds:Inconsistent/Inconsistent C r----
    ns:0 nr:0 dw:0 dr:0 al:0 bm:0 lo:0 pe:0 ua:0 ap:0 ep:1 wo:b oos:30702640</literallayout>
<simpara>Synchronize the servers by forcing one to become the primary. So on pf1 do:</simpara>
<literallayout class="monospaced"># drbdadm -- --overwrite-data-of-peer primary mysql</literallayout>
<simpara>After issuing this command, the initial full synchronization will start. You will be able to monitor its progress via <literal>/proc/drbd</literal>. It may take some time depending on the size of the device. Wait until it completes.</simpara>
<simpara>When the sync is complete, create the filesystem on the primary node only:</simpara>
<literallayout class="monospaced"># mkfs.ext3 /dev/drbd0</literallayout>
<simpara>Make sure DRBD is started at boot time:</simpara>
<literallayout class="monospaced"># chkconfig --level 2345 drbd on</literallayout>
<simpara>Restart both servers.</simpara>
<simpara>When done, look in <literal>/proc/drbd</literal> and make sure you see:</simpara>
<literallayout class="monospaced">...
 0: cs:Connected ro:Primary/Secondary ds:UpToDate/UpToDate C r---
    ns:0 nr:0 dw:0 dr:0 al:0 bm:0 lo:0 pe:0 ua:0 ap:0 ep:1 wo:b oos:0</literallayout>
</section>
<section id="_mysql_configuration">
<title>MySQL Configuration</title>
<note><simpara>By default MySQL puts its data in <literal>/var/lib/mysql</literal>. In order to replicate data between the two servers, we mount the DRBD partition under <literal>/var/lib/mysql</literal>.</simpara></note>
<simpara>When first starting MySQL, the partition must be mounted.</simpara>
<simpara>In order to do so:</simpara>
<simpara>On the master server (the server you are working on), tell DRBD to become the primary node with:</simpara>
<literallayout class="monospaced"># drbdadm primary mysql</literallayout>
<simpara><literal>mysql</literal> being the name of the DRBD partition.</simpara>
<simpara>In <literal>/proc/drbd</literal> you should see something like:</simpara>
<literallayout class="monospaced">...
 0: cs:Connected ro:Primary/Secondary ds:UpToDate/UpToDate C r----
    ns:145068 nr:4448 dw:149516 dr:10490 al:31 bm:14 lo:0 pe:0 ua:0 ap:0 ep:1 wo:d oos:0</literallayout>
<simpara>Mount the partition with:</simpara>
<literallayout class="monospaced"># mount /dev/drbd0 /var/lib/mysql</literallayout>
<simpara>Start MySQL</simpara>
<literallayout class="monospaced"># service mysqld start</literallayout>
<simpara>Execute the secure installation script in order to set the root password, remove the test databases and anonymous user created by default:</simpara>
<literallayout class="monospaced"># /usr/bin/mysql_secure_installation</literallayout>
<simpara>Make sure MySQL does <emphasis role="strong">not</emphasis> start at boot time:</simpara>
<literallayout class="monospaced"># chkconfig --level 2345 mysqld off</literallayout>
</section>
<section id="_heartbeat_configuration">
<title>Heartbeat configuration</title>
<simpara>Create <literal>/etc/ha.d/ha.cf</literal> with the following content:</simpara>
<literallayout class="monospaced">bcast eth0
bcast eth1
keepalive 2
warntime 30
deadtime 60
auto_failback off
initdead 120
node pf1.example.org
node pf2.example.org
use_logd yes</literallayout>
<simpara>Here we assume that the redundant connections for the Heartbeat between the 2 servers are on <literal>eth0</literal> and <literal>eth1</literal>.</simpara>
<simpara>Create <literal>/etc/ha.d/haresources</literal> with the following content:</simpara>
<literallayout class="monospaced">pf1.example.com Ipaddr2::x.x.x.x IfUp::eth0.y IfUp::eth0.z drbddisk::mysql Filesystem::/dev/drbd0::/var/lib/mysql::ext3 mysqld packetfence</literallayout>
<itemizedlist spacing="compact">
<listitem>
<simpara>
<literal>x.x.x.x</literal> is PF admin virtual address
</simpara>
</listitem>
<listitem>
<simpara>
<literal>eth0.y</literal> is the name of the NIC configuration file (<literal>/etc/sysconfig/network-scripts/ifcfg_eth0.y</literal>) dedicated to IP address in VLAN <literal>y</literal> (registration for example).
</simpara>
</listitem>
<listitem>
<simpara>
<literal>eth0.z</literal> is the name of the NIC configuration file (<literal>/etc/sysconfig/network-scripts/ifcfg_eth0.z</literal>) dedicated to IP address in VLAN <literal>z</literal> (isolation for example).
</simpara>
</listitem>
</itemizedlist>
<simpara>Create the <literal>/etc/ha.d/resource.d/IfUp</literal> script that will mount IP addresses in Registration, Isolation (<literal>eth0.y</literal>, <literal>eth0.z</literal>) with the following content:</simpara>
<literallayout class="monospaced">case "$2" in
        start)
                echo -n "Mounting $1"
                /sbin/ifup $1
                echo "."
                ;;
        stop)
                echo -n "Unmounting $1"
                /sbin/ifdown $1
                echo "."
                ;;
        *)
                echo "Usage: $0 {start|stop}"
                exit 1
                ;;
esac</literallayout>
<simpara>and make it executable:</simpara>
<literallayout class="monospaced"># chmod 755 /etc/ha.d/resource.d/IfUp</literallayout>
<simpara>Create <literal>/etc/ha.d/authkeys</literal> with the following content:</simpara>
<literallayout class="monospaced">auth 1
1 sha1 10b245aa92161294df5126abc5b3b71d</literallayout>
<simpara>and change its rights like this:</simpara>
<literallayout class="monospaced"># chmod 600 /etc/ha.d/authkeys</literallayout>
<simpara>Create <literal>/etc/logd.cf</literal> with the following content:</simpara>
<literallayout class="monospaced">debugfile /var/log/ha-debug
logfile /var/log/ha-log
logfacility daemon</literallayout>
<note><simpara>Make sure port 694 is opened (through iptables) on both servers</simpara></note>
<simpara>Start Heartbeat:</simpara>
<literallayout class="monospaced"># service heartbeat start</literallayout>
<simpara>Look at Heartbeat log file <literal>/var/log/ha-log</literal> to make sure that everything is fine.</simpara>
<simpara>Enable HB automatic start</simpara>
<literallayout class="monospaced"># chkconfig --level 345 heartbeat on</literallayout>
</section>
<section id="_radius_ha_configuration">
<title>RADIUS HA configuration</title>
<simpara>If you configured FreeRADIUS with your wireless setup and you configured redundancy, you could configure FreeRADIUS to answer requests exclusively coming on the virtual IP. In order to do so, you need to modify the RADIUS configuration and add RADIUS to the managed resources.</simpara>
<section id="_radius_configuration">
<title>RADIUS Configuration</title>
<simpara>Modify the <literal>listen</literal> statements in the <literal>radiusd.conf</literal> file per the following. Change the <literal>[VIP_IPV4_ADDRSS]</literal> with your virtual IP address:</simpara>
<literallayout class="monospaced">listen {
  type = auth
  ipaddr = [VIP_IPV4_ADDRESS]
  port = 0
}
listen {
  type = acct
  ipaddr = [VIP_IPV4_ADDRESS]
  port = 0
}</literallayout>
</section>
<section id="_heartbeat_configuration_2">
<title>Heartbeat Configuration</title>
<simpara>Add RADIUS to the managed resources (in <literal>/etc/ha.d/haresources</literal>):</simpara>
<literallayout class="monospaced">pf1.example.com Ipaddr2::x.x.x.x IfUp::eth0.y IfUp::eth0.z drbddisk::mysql Filesystem::/dev/drbd0::/var/lib/mysql::ext3 mysqld packetfence radiusd</literallayout>
</section>
</section>
</section>
</chapter>
<chapter id="_performance_optimization">
<title>Performance optimization</title>
<section id="_mysql_optimizations">
<title>MySQL optimizations</title>
<section id="_tuning_mysql_itself">
<title>Tuning MySQL itself</title>
<simpara>If you&#8217;re PacketFence system is acting <emphasis role="strong">very slow</emphasis>, this could be due to your MySQL configuration. You should do the following to tune performance:</simpara>
<simpara>Check the system load</simpara>
<literallayout class="monospaced"># uptime
11:36:37 up 235 days,  1:21,  1 user, load average: 1.25, 1.05, 0.79</literallayout>
<simpara>Check iostat and CPU</simpara>
<literallayout class="monospaced"># iostat 5
avg-cpu:  %user   %nice    %sys %iowait   %idle
           0.60    0.00    3.20   20.20   76.00
Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn
cciss/c0d0       32.40         0.00      1560.00          0       7800
avg-cpu:  %user   %nice    %sys %iowait   %idle
           0.60    0.00    2.20    9.20   88.00
Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn
cciss/c0d0        7.80         0.00        73.60          0        368
avg-cpu:  %user   %nice    %sys %iowait   %idle
           0.60    0.00    1.80   23.80   73.80
Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn
cciss/c0d0       31.40         0.00      1427.20          0       7136
avg-cpu:  %user   %nice    %sys %iowait   %idle
           0.60    0.00    2.40   18.16   78.84
Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn
cciss/c0d0       27.94         0.00      1173.65          0       5880</literallayout>
<simpara>As you can see, the load is 1.25 and IOWait is peaking at 20% - this is not good. If your IO wait is low but your MySQL is taking +%50 CPU this is also not good. Check your MySQL install for the following variables:</simpara>
<literallayout class="monospaced">mysql&gt; show variables;
| innodb_additional_mem_pool_size | 1048576      |
| innodb_autoextend_increment     | 8            |
| innodb_buffer_pool_awe_mem_mb   | 0            |
| innodb_buffer_pool_size         | 8388608      |</literallayout>
<simpara>PacketFence relies heavily on InnoDB, so you should increase the <literal>buffer_pool</literal> size from the default values.</simpara>
<simpara>Shutdown PacketFence and MySQL</simpara>
<literallayout class="monospaced"># /etc/init.d/packetfence stop
Shutting down PacketFence...
[...]
# /etc/init.d/mysql stop
Stopping MySQL:                                            [  OK  ]</literallayout>
<simpara>Edit <literal>/etc/my.cnf</literal> (or your local <literal>my.cnf</literal>):</simpara>
<literallayout class="monospaced">[mysqld]
# Set buffer pool size to 50-80% of your computer's memory
innodb_buffer_pool_size=800M
innodb_additional_mem_pool_size=20M
innodb_flush_log_at_trx_commit=2
# allow more connections
max_connections=700
# set cache size
key_buffer_size=900M
table_cache=300
query_cache_size=256M
# enable slow query log
log_slow_queries = ON</literallayout>
<simpara>Start up MySQL and PacketFence</simpara>
<literallayout class="monospaced"># /etc/init.d/mysqld start
Starting MySQL:                                            [  OK  ]
# /etc/init.d/packetfence start
Starting PacketFence...
[...]</literallayout>
<simpara>Wait 10 minutes for PacketFence to initial the network map and re-check iostat and CPU</simpara>
<screen># uptime
12:01:58 up 235 days,  1:46,  1 user, load average: 0.15, 0.39, 0.52
# iostat 5
Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn
cciss/c0d0        8.00         0.00        75.20          0        376

avg-cpu:  %user   %nice    %sys %iowait   %idle
           0.60    0.00    2.99   13.37   83.03

Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn
cciss/c0d0       14.97         0.00       432.73          0       2168
avg-cpu:  %user   %nice    %sys %iowait   %idle
           0.20    0.00    2.60    6.60   90.60

Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtn
cciss/c0d0        4.80         0.00        48.00          0        240</screen>
</section>
<section id="_mysql_optimization_tool">
<title>MySQL optimization tool</title>
<simpara>We recommend that you run the MySQL Tuner tool on your database setup after a couple of weeks to help you identify MySQL configuration improvement.</simpara>
<simpara><ulink url="http://blog.mysqltuner.com/download/">http://blog.mysqltuner.com/download/</ulink></simpara>
</section>
<section id="_keeping_tables_small">
<title>Keeping tables small</title>
<simpara>Over time, some of the tables will grow large and this will drag down performance (this is especially true on a wireless setup).</simpara>
<simpara>One such table is the <literal>locationlog</literal> table. We recommend that closed entries in this table be moved to the archive table <literal>locationlog_history</literal> after some time. A closed record is one where the <literal>end_time</literal> field is set to a date (strickly speaking it is when <literal>end_time</literal> is not null and not equals to 0).</simpara>
<simpara>We provide a script called <literal>database-backup-and-maintenance.sh</literal> located in <literal>addons/</literal> that performs this cleanup in addition to optimize tables on Sunday and daily backups.</simpara>
</section>
<section id="_avoid_too_many_connections_problems">
<title>Avoid "Too many connections" problems</title>
<simpara>In a wireless context, there tends to be a lot of connections made to the database by our <literal>freeradius</literal> module. The default MySQL value tend to be low (100) so we encourage you to increase that value to at least 300. See <ulink url="http://dev.mysql.com/doc/refman/5.0/en/too-many-connections.html">http://dev.mysql.com/doc/refman/5.0/en/too-many-connections.html</ulink> for details.</simpara>
</section>
<section id="_avoid_host_lt_hostname_gt_is_blocked_problems">
<title>Avoid "Host &lt;hostname&gt; is blocked" problems</title>
<simpara>In a wireless context, there tend to be a lot of connections made to the database by our freeradius module. When the server is loaded, these connection attempts can timeout. If a connection times out during connection, MySQL will consider this a connection error and after 10 of these (by default) he will lock the host out with a:</simpara>
<literallayout class="monospaced">Host 'host_name' is blocked because of many connection errors. Unblock with 'mysqladmin flush-hosts'</literallayout>
<simpara>This will grind PacketFence to a halt so you want to avoid that at all cost. One way to do so is to increase the number of maximum connections (see above), to periodically flush hosts or to allow more connection errors. See <ulink url="http://dev.mysql.com/doc/refman/5.0/en/blocked-host.html">http://dev.mysql.com/doc/refman/5.0/en/blocked-host.html</ulink> for details.</simpara>
</section>
</section>
<section id="_captive_portal_optimizations">
<title>Captive Portal Optimizations</title>
<section id="_avoid_captive_portal_overload_due_to_non_browser_http_requests">
<title>Avoid captive portal overload due to non-browser HTTP requests</title>
<simpara>By default we allow every query to be redirected and reach PacketFence for the captive portal operation. In a lot of cases, this means that a lot of non-user initiated queries reach PacketFence and waste its resources for nothing since they are not from browsers. (iTunes, Windows update, MSN Messenger, Google Desktop, &#8230;).</simpara>
<simpara>So far, we blacklisted clients known to be misbehaving. However, a completely different approach can be taken: whitelist only known browsers.</simpara>
<simpara>This has the nasty side-effect of being unfriendly with (blocking) less popular browsers and devices so this is disabled by default.</simpara>
<simpara>If you want to enable this feature, edit <literal>conf/httpd.conf.d/block-unwanted.conf</literal>, and uncomment the following lines:</simpara>
<literallayout class="monospaced">RewriteCond %{HTTP_USER_AGENT} !^Mozilla
RewriteCond %{HTTP_USER_AGENT} !^Opera
RewriteCond %{HTTP_USER_AGENT} !^BlackBerry
RewriteRule ^.*$ - [L,forbidden]</literallayout>
<simpara>This will allow the following browsers to reach the captive portal (but nothing else):</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
BlackBerry
</simpara>
</listitem>
<listitem>
<simpara>
Firefox
</simpara>
</listitem>
<listitem>
<simpara>
Google Chrome
</simpara>
</listitem>
<listitem>
<simpara>
Internet Explorer
</simpara>
</listitem>
<listitem>
<simpara>
Opera
</simpara>
</listitem>
<listitem>
<simpara>
Safari
</simpara>
</listitem>
</itemizedlist>
</section>
</section>
</chapter>
<chapter id="_frequently_asked_questions">
<title>Frequently Asked Questions</title>
<simpara>PacketFence FAQ is now available online. Please visit:</simpara>
<simpara><ulink url="http://www.packetfence.org/support/faqs.html">http://www.packetfence.org/support/faqs.html</ulink></simpara>
</chapter>
<chapter id="_technical_introduction_to_vlan_enforcement">
<title>Technical introduction to VLAN enforcement</title>
<section id="_introduction_2">
<title>Introduction</title>
<simpara>VLAN assignment is currently performed using several different techniques. These techniques are compatible one to another but not on the same switch port. This means that you can use the more secure and modern techniques for your latest switches and another technique on the old switches that doesn&#8217;t support latest techniques. As it&#8217;s name implies, VLAN assignment means that PacketFence is the server that assigns the VLAN to a device. This VLAN can be one of your VLANs or it can be a special VLAN where PacketFence presents the captive portal for authentication or remediation.</simpara>
<simpara>VLAN assignment effectively isolate your hosts at the OSI Layer2 meaning that it is the trickiest method to bypass and is the one which adapts best to your environment since it glues into your current VLAN assignment methodology.</simpara>
</section>
<section id="_vlan_assignment_techniques">
<title>VLAN assignment techniques</title>
<section id="_port_security_and_snmp">
<title>Port-security and SNMP</title>
<simpara>Relies on the port-security SNMP Traps. A fake static MAC address is assigned to all the ports this way any MAC address will generate a security violation and a trap will be sent to PacketFence. The system will authorize the MAC and set the port in the right VLAN. VoIP support is possible but tricky. It varies a lot depending on the switch vendor. Cisco is well supported but isolation of a PC behind an IP Phone leads to an interesting dilemma: either you shut the port (and the phone at the same time) or you change the data VLAN but the PC doesn&#8217;t do DHCP (didn&#8217;t detect link was down) so it cannot reach the captive portal.</simpara>
<simpara>Aside from the VoIP isolation dilemma, it is the technique that has proven to be reliable and that has the most switch vendor support.</simpara>
</section>
<section id="_wired_802_1x_mac_authentication">
<title>Wired: 802.1X + MAC Authentication</title>
<simpara>802.1X provides port-based authentication, which involves communications between a supplicant, authenticator (known as NAS), and authentication server (known as AAA). The supplicant is often software on a client device, such as a laptop, the authenticator is a wired Ethernet switch or wireless access point, and the authentication server is generally a RADIUS server.</simpara>
<simpara>The supplicant (i.e., client device) is not allowed access through the authenticator to the network until the supplicant’s identity is authorized. With 802.1X port-based authentication, the supplicant provides credentials, such as user name / password or digital certificate, to the authenticator, and the authenticator forwards the credentials to the authentication server for verification. If the credentials are valid (in the authentication server database), the supplicant (client device) is allowed to access the network. The protocol for authentication is called Extensible Authentication Protocol (EAP) which have many variants. Both supplicant and authentication servers need to speak the same EAP protocol. Most popular EAP variant is PEAP-MsCHAPv2 (supported by Windows / Mac OSX / Linux for authentication against AD).</simpara>
<simpara>In this context, PacketFence runs the authentication server (a FreeRADIUS instance) and will return the appropriate VLAN to the switch. A module that integrates in FreeRADIUS does a remote call to the PacketFence server to obtain that information. More and more devices have 802.1X supplicant which makes this approach more and more popular.</simpara>
<simpara>MAC Authentication is a new mechanism introduced by some switch vendor to handle the cases where a 802.1X supplicant does not exist. Different vendors have different names for it. Cisco calls it MAC Authentication Bypass (MAB), Juniper calls it MAC RADIUS, Extreme Networks calls it Netlogin, etc. After a timeout period, the switch will stop trying to perform 802.1X and will fallback to MAC Authentication. It has the advantage of using the same approach as 802.1X except that the MAC address is sent instead of the user name and there is no end-to-end EAP conversation (no strong authentication). Using MAC Authentication, devices like network printer or non-802.1X capable IP Phones can still gain access to the network and the right VLAN.</simpara>
</section>
<section id="_wireless_802_1x_mac_authentication">
<title>Wireless: 802.1X + MAC authentication</title>
<simpara>Wireless 802.1X works like wired 802.1X and MAC authentication is the same as wired MAC Authentication. Where things change is that the 802.1X is used to setup the security keys for encrypted communication (WPA2-Enterprise) while MAC authentication is only used to authorize (allow or disallow) a MAC on the wireless network.</simpara>
<simpara>On wireless networks, the usual PacketFence setup dictate that you configure two SSIDs: an open one and a secure one. The open one is used to help users configure the secure one properly and requires authentication over the captive portal (which runs in HTTPS).</simpara>
</section>
</section>
<section id="_more_on_snmp_traps_vlan_isolation">
<title>More on SNMP traps VLAN isolation</title>
<simpara>When the VLAN isolation is working through SNMP traps all switch ports (on which VLAN isolation should be done) must be configured to send SNMP traps to the PacketFence host. On PacketFence, we use snmptrapd as the SNMP trap receiver. As it receives traps, it reformats and writes them into a flat file: <literal>/usr/local/pf/logs/snmptrapd.log</literal>. The multithreaded <literal>pfsetvlan</literal> daemon reads these traps from the flat file and responds to them by setting the switch port to the correct VLAN. Currently, we support switches from Cisco, Edge-core, HP, Intel, Linksys and Nortel (adding support for switches from another vendor implies extending the <literal>pf::Switch</literal> class). Depending on your switches capabilities, <literal>pfsetvlan</literal> will act on different types of SNMP traps.</simpara>
<informalfigure>
<mediaobject>
  <imageobject>
  <imagedata fileref="docs/images/diagram-trap-interaction.png" width="50%" scalefit="1"/>
  </imageobject>
  <textobject><phrase>pfsetvlan SNMP interactions diagram</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>You need to create a registration VLAN (with a DHCP server, but no routing to other VLANs) in which PacketFence will put unregistered devices. If you want to isolate computers which have open violations in a separate VLAN, an isolation VLAN needs also to be created.</simpara>
<section id="_linkup_linkdown_traps">
<title>linkUp/linkDown traps</title>
<simpara>This is the most basic setup and it needs a third VLAN: the MAC detection VLAN. There should be nothing in this VLAN (no DHCP server) and it should not be routed anywhere; it is just an void VLAN.</simpara>
<simpara>When a host connects to a switch port, the switch sends a linkUp trap to PacketFence. Since it takes some time before the switch learns the MAC address of the newly connected device, PacketFence immediately puts the port in the MAC detection VLAN in which the device will send DHCP requests (with no answer) in order for the switch to learn its MAC address. Then pfsetvlan will send periodical SNMP queries to the switch until the switch learns the MAC of the device. When the MAC address is known, pfsetvlan checks its status (existing ? registered ? any violations ?) in the database and puts the port in the appropriate VLAN. When a device is unplugged, the switch sends a <emphasis>linkDown</emphasis> trap to PacketFence which puts the port into the MAC detection VLAN.</simpara>
<simpara>When a computer boots, the initialization of the NIC generates several link status changes. And every time the switch sends a linkUp and a linkDown trap to PacketFence. Since PacketFence has to act on each of these traps, this generates unfortunately some unnecessary load on pfsetvlan. In order to optimize the trap treatment, PacketFence stops every thread for a <emphasis>linkUp trap</emphasis> when it receives a <emphasis>linkDown</emphasis> trap on the same port. But using only linkUp/linkDown traps is not the most scalable option. For example in case of power failure, if hundreds of computers boot at the same time, PacketFence would receive a lot of traps almost instantly and this could result in network connection latency…</simpara>
</section>
<section id="_mac_notification_traps">
<title>MAC notification traps</title>
<simpara>If your switches support MAC notification traps (MAC learnt, MAC removed), we suggest that you activate them in addition to the linkUp/linkDown traps. This way, pfsetvlan does not need, after a linkUp trap, to query the switch continuously until the MAC has finally been learned. When it receives a linkUp trap for a port on which MAC notification traps are also enabled, it only needs to put the port in the MAC detection VLAN and can then free the thread. When the switch learns the MAC address of the device it sends a MAC learnt trap (containing the MAC address) to PacketFence.</simpara>
</section>
<section id="_port_security_traps">
<title>Port Security traps</title>
<simpara>In its most basic form, the Port Security feature remembers the MAC address connected to the switch port and allows only that MAC address to communicate on that port. If any other MAC address tries to communicate through the port, port security will not allow it and send a port-security trap.</simpara>
<simpara>If your switches support this feature, <emphasis role="strong">we strongly recommend to use it rather than linkUp/linkDown and/or MAC notifications</emphasis>. Why? Because as long as a MAC address is authorized on a port and is the only one connected, the switch will send no trap whether the device reboots, plugs in or unplugs. This drastically reduces the SNMP interactions between the switches and PacketFence.</simpara>
<simpara>When you enable port security traps you should not enable linkUp/linkDown nor MAC notification traps.</simpara>
</section>
</section>
</chapter>
<chapter id="_technical_introduction_to_inline_enforcement">
<title>Technical introduction to Inline enforcement</title>
<section id="_introduction_3">
<title>Introduction</title>
<simpara>Before the version 3.0 of PacketFence, it was not possible to support unmanageable devices such as entry-level consumer switches or access-points. Now, with the new inline mode, PacketFence can be use in-band for those devices. So in other words, PacketFence would become the gateway of that inline network, and NAT or route the traffic using IPTables to the Internet (or to another section of the network). Let see how it works.</simpara>
</section>
<section id="_device_configuration">
<title>Device configuration</title>
<simpara>No special configuration is needed on the unmanageable device. That&#8217;s the beauty of it. You only need to ensure that the device is "talking" on the inline VLAN. At this point, all the traffic will be passing through PacketFence since it is the gateway for this VLAN.</simpara>
</section>
<section id="_access_control">
<title>Access control</title>
<simpara>The access control relies entirely on IPTables. When a user is not registered, and connects in the inline VLAN, PacketFence will give him an IP address. At this point, the user will be marked as unregistered in the firewall, and all the Web traffic will be redirected to the captive portal and other traffic blocked. The user will have to register through the captive portal as in VLAN enforcement. When he registers, PacketFence changes the firewall marking rule to allow the user&#8217;s mac address to go through it.</simpara>
</section>
<section id="_limitations">
<title>Limitations</title>
<simpara>Inline enforcement because of it&#8217;s nature has several limitations that one must be aware of.</simpara>
<itemizedlist spacing="compact">
<listitem>
<simpara>
Everyone behind an inline interface is on the same Layer 2 LAN
</simpara>
</listitem>
<listitem>
<simpara>
Every packet of authorized users goes through the PacketFence server increasing the servers' load considerably: Plan ahead for capacity
</simpara>
</listitem>
<listitem>
<simpara>
Every packet of authorized users goes through the PacketFence server: it is a single point of failure for Internet access
</simpara>
</listitem>
<listitem>
<simpara>
Does not handle routed networks
</simpara>
</listitem>
<listitem>
<simpara>
Ipset can store up to 65536 entries, so it is not possible to have a inline network class upper than B
</simpara>
</listitem>
</itemizedlist>
<simpara>This is why it is considered a poor man&#8217;s way of doing access control. We have avoided it for a long time because of the above mentioned limitations. That said, being able to perform both inline and VLAN enforcement on the same server at the same time is a real advantage: it allows users to maintain maximum security while they deploy new and more capable network hardware providing a clean migration path to VLAN enforcement.</simpara>
</section>
</chapter>
<chapter id="_technical_introduction_to_hybrid_enforcement">
<title>Technical introduction to Hybrid enforcement</title>
<section id="_introduction_4">
<title>Introduction</title>
<simpara>Before version 3.6 of PacketFence, it was not possible to have RADIUS enabled for inline enforcement mode. Now with the new hybrid mode, all the devices that supports 802.1X or MAC-authentication can work with this mode. Let&#8217;s see how it works.</simpara>
</section>
<section id="_device_configuration_2">
<title>Device configuration</title>
<simpara>You need to configure inline enforcement mode in PacketFence and configure your switch(es) / access point(s) to use the VLAN assignement techniques (802.1X or MAC-authentication). You also need to take care of a specific parameter in the switch configuration window, "Trigger to enable inline mode". This parameter is working like a trigger and you have the possibility to define different sort of trigger:</simpara>
<variablelist>
<varlistentry>
<term>
ALWAYS
</term>
<term>
PORT
</term>
<term>
MAC
</term>
<term>
SSID
</term>
<listitem>
<simpara>
where ALWAYS means that the device is always in inline mode, PORT specify the ifIndex of the port which will use inline enforcement, MAC a mac address that will be put in inline enforcement technique rather than VLAN enforcement and SSID an ssid name.
An example:
</simpara>
<literallayout class="monospaced">SSID::GuestAccess,MAC::00:11:22:33:44:55</literallayout>
</listitem>
</varlistentry>
</variablelist>
<simpara>This will trigger all the nodes that connects to the "GuestAccess" SSID to use inline enforcement mode (PacketFence will return a void VLAN or the inlineVlan if defined in switch configuration) and the mac address 00:11:22:33:44:55 client if it connects on another SSID.</simpara>
</section>
</chapter>
<chapter id="_more_on_voip_integration">
<title>More on VoIP Integration</title>
<simpara>VoIP has been growing in popularity on enterprise networks.  At first sight, the IT administrators think that deploying VoIP with a NAC poses a huge complicated challenge to resolve.  In fact, depending of the hardware you have, not really.  In this section, we will see why.</simpara>
<section id="_cdp_and_lldp_are_your_friend">
<title>CDP and LLDP are your friend</title>
<simpara>For those of you who are unaware of the existence of CDP or LLDP (or LLDP-MED), I suggest you start reading on this topic.  Cisco Discovery Protocol (CDP) is device-discovery protocol that runs on all Cisco-manufactured equipment including routers, access servers, bridges, and switches. Using CDP, a device can advertise its existence to other devices and receive information about other devices on the same LAN or on the remote side of a WAN.  In the world of VoIP, CDP is able to determine if the connecting device is an IP Phone or not, and tell the IP Phone to tag its ethernet frame using the configured voice VLAN on the switchport.</simpara>
<simpara>On many other vendors, you are likely to find LLDP or LLDP-MED support.  Link Layer Discovery Protocol (LLDP) is a vendor-neutral Link Layer protocol in the Internet Protocol Suite used by network devices for advertising their identity, capabilities, and neighbors.  Same as CDP, LLDP can tell an IP Phone which VLAN id is the voice VLAN.</simpara>
</section>
<section id="_voip_and_vlan_assignment_techniques">
<title>VoIP and VLAN assignment techniques</title>
<simpara>As you already know, PacketFence supports many VLAN assignment techniques such as port-security, mac authentication or 802.1X.  Let&#8217;s see how VoIP is doing with each of those.</simpara>
<section id="_port_security_2">
<title>Port-security</title>
<simpara>Using port-security, the VoIP device rely on CDP/LLDP to tag its ethernet frame using the configured voice VLAN on the switch port.  After that, we ensure that a security trap is sent from the voice VLAN so that PacketFence can authorize the mac address on the port.  When the PC connects, another security trap will be sent, but from the data VLAN.  That way, we will have 1 mac address authorized on the voice VLAN, and 1 on the access VLAN.</simpara>
<note><simpara>Not all vendors support VoIP on port-security, please refer to the Network Configuration Guide.</simpara></note>
</section>
<section id="_mac_authentication_and_802_1x">
<title>Mac Authentication and 802.1X</title>
<section id="_cisco_hardware">
<title>Cisco hardware</title>
<simpara>On Cisco switches, we are looking at the multi-domain configuration.  The multi-domain means that we can have one device on the VOICE domain, and one device on the DATA domain.  The domain assignment is done using a Cisco VSA.  When the phone connects to the switchport, PacketFence will respond with the proper VSA only, no RADIUS tunneled attributes.  CDP then tells the phone to tag its ethernet frames using the configured voice VLAN on the port.  When a PC connects, the RADIUS server will return tunneled attributes, and the switch will place the port in the provided access VLAN.</simpara>
</section>
<section id="_non_cisco_hardware">
<title>Non-Cisco hardware</title>
<simpara>On other vendor hardware, it is possible to make VoIP work using RADIUS VSAs.  When a phone connects to a switchport, PacketFence needs to return the proper VSA to tell the switch to allow tagged frames from this device.  When the PC will connect, we will be able to return standard RADIUS tunnel attributes to the switch, that will be the untagged VLAN.</simpara>
<note><simpara>Again, refer to the Network Configuration Guide to see if VoIP is supported on your switch hardware.</simpara></note>
</section>
</section>
</section>
<section id="_what_if_cdp_lldp_feature_is_missing">
<title>What if CDP/LLDP feature is missing</title>
<simpara>It is possible that your phone doesn&#8217;t support CDP or LLDP.  If it&#8217;s the case, you are probably looking at the "DHCP way" of provisionning your phone with a voice VLAN.  Some models will ask for a specific DHCP option so that the DHCP server can give the phone a voice VLAN id.  The phone will then reboot, and tag its ethernet frame using the provided VLAN tag.</simpara>
<simpara>In order to make this scenario work with PacketFence, you need to ensure that you tweak the registration and your production DHCP server to provide the DHCP option.  You also need to make sure there is a voice VLAN properly configured on the port, and that you auto-register your IP Phones (On the first connect, the phone will be assigned on the registration VLAN).</simpara>
</section>
</chapter>
<chapter id="_additional_information">
<title>Additional Information</title>
<simpara>For more information, please consult the mailing archives or post your
questions to it. For details, see:</simpara>
<itemizedlist>
<listitem>
<simpara>
<ulink url="mailto:packetfence-announce@lists.sourceforge.net">packetfence-announce@lists.sourceforge.net</ulink>: Public announcements (new
  releases, security warnings etc.) regarding PacketFence
</simpara>
</listitem>
<listitem>
<simpara>
<ulink url="mailto:packetfence-devel@lists.sourceforge.net">packetfence-devel@lists.sourceforge.net</ulink>: Discussion of PacketFence development
</simpara>
</listitem>
<listitem>
<simpara>
<ulink url="mailto:packetfence-users@lists.sourceforge.net">packetfence-users@lists.sourceforge.net</ulink>: User and usage discussions
</simpara>
</listitem>
</itemizedlist>
</chapter>
<chapter id="_commercial_support_and_contact_information">
<title>Commercial Support and Contact Information</title>
<simpara>For any questions or comments, do not hesitate to contact us by writing an
email to: <ulink url="mailto:support@inverse.ca">support@inverse.ca</ulink>.</simpara>
<simpara>Inverse (<ulink url="http://inverse.ca">http://inverse.ca</ulink>) offers professional services around PacketFence
to help organizations deploy the solution, customize, migrate versions or
from another system, performance tuning or aligning with best practices.</simpara>
<simpara>Hourly rates or support packages are offered to best suit your needs.</simpara>
<simpara>Please visit <ulink url="http://inverse.ca/support.html">http://inverse.ca/support.html</ulink> for details.</simpara>
</chapter>
<chapter id="_gnu_free_documentation_license">
<title>GNU Free Documentation License</title>
<simpara>Please refer to <ulink url="http://www.gnu.org/licenses/fdl-1.2.txt">http://www.gnu.org/licenses/fdl-1.2.txt</ulink> for the full license.</simpara>
</chapter>
<appendix id="_administration_tools">
<title>Administration Tools</title>
<section id="_pfcmd">
<title>pfcmd</title>
<simpara><literal>pfcmd</literal> is the command line interface to most PacketFence functionalities.</simpara>
<simpara>When executed without any arguments <literal>pfcmd</literal> returns a basic help message with all main options:</simpara>
<screen></screen>
<simpara>The node view option shows all information contained in the node database table for a specified MAC address</simpara>
<literallayout class="monospaced"># /usr/local/pf/bin/pfcmd node view 52:54:00:12:35:02
mac|pid|detect_date|regdate|unregdate|lastskip|status|user_agent|computername|notes|last_arp|last_dhcp|switch|port|vlan|dhcp_fingerprint
52:54:00:12:35:02|1|2008-10-23 17:32:16||||unreg||||2008-10-23 21:12:21|||||</literallayout>
</section>
<section id="_pfcmd_vlan">
<title>pfcmd_vlan</title>
<simpara><literal>pfcmd_vlan</literal> is the command line interface to most VLAN isolation related functionality.</simpara>
<simpara>Again, when executed without any arguments, a help screen is shown.</simpara>
<screen></screen>
</section>
<section id="_web_admin_gui">
<title>Web Admin GUI</title>
<simpara>The Web Admin GUI, accessible using https on port 1443, shows the same information available using <literal>pfcmd</literal>.</simpara>
</section>
</appendix>
<appendix id="_manual_freeradius_2_configuration">
<title>Manual FreeRADIUS 2 configuration</title>
<simpara>Since we provide a working RPM package that contains pre-built RADIUS configuration files, those files don&#8217;t need to be modified by hand anymore. However, consider this section as a reference.</simpara>
<section id="_configuration_7">
<title>Configuration</title>
<section id="_in_usr_local_pf_raddb_sites_enabled_default">
<title>In /usr/local/pf/raddb/sites-enabled/default</title>
<simpara>Make sure the <literal>authorize{}</literal>, <literal>authenticate{}</literal> and <literal>post-auth{}</literal> sections look like this:</simpara>
<screen>authorize {
        preprocess
        eap {
                ok = return
        }
        files
        expiration
        logintime
        perl
}

authenticate {
        Auth-Type MS-CHAP {
                mschap
        }
        eap
}

post-auth {
        perl
}</screen>
</section>
<section id="_in_usr_local_pf_raddb_sites_enabled_inner_tunnel">
<title>In /usr/local/pf/raddb/sites-enabled/inner-tunnel</title>
<simpara>Make sure the <literal>authorize{}</literal>, <literal>authenticate{}</literal> and <literal>post-auth{}</literal> sections look like this:</simpara>
<screen>authorize {
        preprocess
        eap {
                ok = return
        }
        files
        expiration
        logintime
}

authenticate {
        Auth-Type MS-CHAP {
                mschap
        }
        eap
}

post-auth {
        perl
}</screen>
</section>
<section id="_in_usr_local_pf_raddb_users">
<title>In /usr/local/pf/raddb/users</title>
<simpara>Add the following lines where we define that non-EAP messages should, by default, lead to an authentication acceptation.</simpara>
<literallayout class="monospaced">DEFAULT EAP-Message !* "", Auth-Type := Accept</literallayout>
<simpara><emphasis role="strong">Comment or delete all other statements.</emphasis></simpara>
</section>
</section>
<section id="_optional_wired_or_wireless_802_1x_configuration">
<title>Optional: Wired or Wireless 802.1X configuration</title>
<simpara>Generate cryptographic material for the EAP tunnel (802.1X) to work. Run as root:</simpara>
<literallayout class="monospaced">cd /usr/local/pf/raddb/certs
make</literallayout>
<section id="_in_usr_local_pf_conf_radiusd_eap_conf">
<title>In /usr/local/pf/conf/radiusd/eap.conf</title>
<simpara>Make sure this file looks like:</simpara>
<screen>eap {
        default_eap_type = peap
        timer_expire     = 60
        ignore_unknown_eap_types = no
        cisco_accounting_username_bug = no
        max_sessions = 2048

        md5 {
        }
        tls {
                certdir = ${confdir}/certs
                cadir = ${confdir}/certs
                private_key_file = /usr/local/pf/conf/ssl/server.key
                certificate_file = /usr/local/pf/conf/ssl/server.crt
                dh_file = ${certdir}/dh
                random_file = ${certdir}/random
                cipher_list = "DEFAULT"
                make_cert_command = "${certdir}/bootstrap"
                cache {
                        enable = no
                        lifetime = 24 # hours
                        max_entries = 255
                }
        }
        ttls {
                default_eap_type = md5
                copy_request_to_tunnel = yes
                use_tunneled_reply = yes
                virtual_server = "inner-tunnel"
        }
        peap {
                default_eap_type = mschapv2
                copy_request_to_tunnel = yes
                use_tunneled_reply = yes
                virtual_server = "inner-tunnel"
        }
        mschapv2 {
        }
}</screen>
</section>
</section>
</appendix>
</book>
